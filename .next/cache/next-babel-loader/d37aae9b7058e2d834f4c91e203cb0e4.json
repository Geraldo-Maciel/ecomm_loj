{"ast":null,"code":"import { SET_FORM, CLEAN_FORM, SET_TIPO_PAGAMENTO, FETCH_SESSION_ID, FETCH_SENDER_HASH, NOVO_PEDIDO, PAGAR_PEDIDO } from '../types';\nimport axios from 'axios';\nimport { API, versao, loja } from '../../config';\nimport { getCart } from '../../utils/cart';\nimport { getHeaders } from './helpers';\nimport errorHandling from './errorHandling';\nimport Router from 'next/router';\nimport { cleanCarrinho } from './carrinhoActions';\nexport var setForm = function setForm(payload, prefix) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_FORM,\n      payload: payload,\n      prefix: prefix\n    });\n    return Promise.resolve();\n  };\n};\nexport var cleanForm = function cleanForm() {\n  return {\n    type: CLEAN_FORM\n  };\n};\nexport var setTipoPagamento = function setTipoPagamento(tipoPagamentoSelecionado) {\n  return {\n    type: SET_TIPO_PAGAMENTO,\n    tipoPagamentoSelecionado: tipoPagamentoSelecionado\n  };\n};\nexport var getSessionPagamento = function getSessionPagamento() {\n  return function (dispatch) {\n    console.log('pulei 1');\n    /*        \r\n        axios.get(`${API}/${versao}/api/pagamentos/session`).then ((response) => {\r\n            dispatch({type: FETCH_SESSION_ID, payload: resposta.data});\r\n    \r\n            PagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n            let senderHash = PagSeguroDirectPayment.getSenderHash();\r\n            dispatch({type: FETCH_SENDER_HASH, senderHash});\r\n        })\r\n        .catch((e) => console.log(e));\r\n    */\n  };\n};\nexport var novoPedido = function novoPedido(form, freteSelecionado, tipoPagamentoSelecionado, valorTotal, token, senderHash) {\n  var carrinho = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : getCart();\n  var cb = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  return function (dispatch) {\n    axios.post(\"\".concat(API, \"/\").concat(versao, \"/api/pedidos?loja=\").concat(loja), {\n      carrinho: carrinho,\n      entrega: {\n        custo: freteSelecionado.Valor.replace(',', '.'),\n        tipo: freteSelecionado.Codigo.toString(),\n        prazo: freteSelecionado.PrazoEntrega,\n        endereco: {\n          local: form.local,\n          numero: form.numero,\n          complemento: form.complemento,\n          bairro: form.bairro,\n          cidade: form.cidade,\n          estado: form.estado,\n          CEP: form.CEP\n        }\n      },\n      pagamento: {\n        valor: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.totalAmount : valorTotal,\n        //            forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\n        forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : tipoPagamentoSelecionado,\n        parcelas: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.quantity : 1,\n        enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\n        endereco: {\n          local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\n          numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\n          complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\n          bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\n          cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\n          estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\n          CEP: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\n        },\n        cartao: tipoPagamentoSelecionado === \"cartao\" ? {\n          nomeCompleto: form.nomeCartao.trim(),\n          codigoArea: form.telefone.slice(0, 2),\n          telefone: form.telefone.slice(2).trim(),\n          dataDeNascimento: form.dataDeNascimento,\n          credit_card_token: form.credit_card_token,\n          cpf: form.CPF\n        } : undefined\n      }\n    }, getHeaders(token)).then(function (response) {\n      console.log('f pagto: ', response.data.pedido.pagamento.forma);\n      dispatch({\n        type: NOVO_PEDIDO,\n        payload: response.data\n      });\n      response.data.pedido.pagamento.forma === 'outro' ? dispatch(pagarPedidoOutro(response.data.pedido.pagamento._id, token, senderHash, cb)) : dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb));\n    })[\"catch\"](function (e) {\n      return cb(errorHandling(e));\n    });\n  };\n};\nexport var pagarPedido = function pagarPedido(id, token, senderHash) {\n  var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return function (dispatch) {\n    axios.post(\"\".concat(API, \"/\").concat(versao, \"/api/pagamentos/pagar/\").concat(id, \"?Loja=\").concat(loja), {\n      senderHash: senderHash\n    }, getHeaders(token)).then(function (response) {\n      console.log('pagamento: ', response.data);\n      dispatch({\n        type: PAGAR_PEDIDO,\n        payload: response.data\n      });\n      cb(null);\n      Router.push('/sucesso');\n      dispatch(cleanCarrinho());\n    })[\"catch\"](function (e) {\n      return cb(errorHandling(e));\n    });\n  };\n};\nexport var pagarPedidoOutro = function pagarPedidoOutro(id, token, senderHash) {\n  var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return function (dispatch) {\n    axios.post(\"\".concat(API, \"/\").concat(versao, \"/api/pagamentos/pagar/\").concat(id, \"?Loja=\").concat(loja), {\n      senderHash: senderHash\n    }, getHeaders(token)).then(function (response) {\n      dispatch({\n        type: PAGAR_PEDIDO,\n        payload: response.data\n      });\n      cb(null);\n      Router.push('/sucesso');\n      dispatch(cleanCarrinho());\n    })[\"catch\"](function (e) {\n      return cb(errorHandling(e));\n    });\n  };\n};\n/*\r\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\r\n    cb(null);\r\n    Router.push('/sucesso');\r\n    dispatch(cleanCarrinho());        \r\n};\r\n*/\n\nexport default {\n  setForm: setForm,\n  cleanForm: cleanForm,\n  setTipoPagamento: setTipoPagamento,\n  getSessionPagamento: getSessionPagamento,\n  novoPedido: novoPedido,\n  pagarPedido: pagarPedido\n};","map":{"version":3,"sources":["F:/APLICACAO/lojavirtual/redux/actions/checkoutActions.js"],"names":["SET_FORM","CLEAN_FORM","SET_TIPO_PAGAMENTO","FETCH_SESSION_ID","FETCH_SENDER_HASH","NOVO_PEDIDO","PAGAR_PEDIDO","axios","API","versao","loja","getCart","getHeaders","errorHandling","Router","cleanCarrinho","setForm","payload","prefix","dispatch","type","Promise","resolve","cleanForm","setTipoPagamento","tipoPagamentoSelecionado","getSessionPagamento","console","log","novoPedido","form","freteSelecionado","valorTotal","token","senderHash","carrinho","cb","post","entrega","custo","Valor","replace","tipo","Codigo","toString","prazo","PrazoEntrega","endereco","local","numero","complemento","bairro","cidade","estado","CEP","pagamento","valor","parcelasCartaoSelecionada","totalAmount","forma","parcelas","quantity","enderecoEntregaIgualCobranca","dadosEntregaIgualDadosCobranca","dadosCobranca","cartao","nomeCompleto","nomeCartao","trim","codigoArea","telefone","slice","dataDeNascimento","credit_card_token","cpf","CPF","undefined","then","response","data","pedido","pagarPedidoOutro","_id","pagarPedido","e","id","push"],"mappings":"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","sourcesContent":["import {\r\n    SET_FORM,\r\n    CLEAN_FORM,\r\n    SET_TIPO_PAGAMENTO,\r\n    FETCH_SESSION_ID,\r\n    FETCH_SENDER_HASH,\r\n    NOVO_PEDIDO,\r\n    PAGAR_PEDIDO\r\n} from '../types';\r\nimport axios from 'axios';\r\nimport {API, versao, loja} from '../../config';\r\nimport {getCart} from '../../utils/cart';\r\nimport {getHeaders} from './helpers';\r\nimport errorHandling from './errorHandling';\r\nimport Router from 'next/router';\r\nimport {cleanCarrinho} from './carrinhoActions';\r\n\r\nexport const setForm = (payload, prefix) => dispatch => {\r\n    dispatch({type: SET_FORM, payload, prefix});\r\n    return Promise.resolve();\r\n}\r\n\r\nexport const cleanForm = () => ({type: CLEAN_FORM});\r\n\r\nexport const setTipoPagamento = (tipoPagamentoSelecionado) => \r\n                        ({type: SET_TIPO_PAGAMENTO, tipoPagamentoSelecionado});\r\n\r\nexport const getSessionPagamento = () => (dispatch) => {\r\n    console.log('pulei 1');\r\n/*        \r\n    axios.get(`${API}/${versao}/api/pagamentos/session`).then ((response) => {\r\n        dispatch({type: FETCH_SESSION_ID, payload: resposta.data});\r\n\r\n        PagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n        let senderHash = PagSeguroDirectPayment.getSenderHash();\r\n        dispatch({type: FETCH_SENDER_HASH, senderHash});\r\n    })\r\n    .catch((e) => console.log(e));\r\n*/   \r\n};\r\n\r\nexport const novoPedido = (\r\n    form, freteSelecionado, tipoPagamentoSelecionado, \r\n    valorTotal, token, senderHash, carrinho = getCart(), cb = null\r\n) => dispatch => {\r\n    axios.post(`${API}/${versao}/api/pedidos?loja=${loja}`, {\r\n        carrinho,\r\n        entrega: {\r\n            custo: freteSelecionado.Valor.replace(',', '.'),\r\n            tipo: (freteSelecionado.Codigo).toString(),\r\n            prazo: freteSelecionado.PrazoEntrega,\r\n            endereco: {\r\n                local: form.local,\r\n                numero: form.numero,\r\n                complemento: form.complemento,\r\n                bairro: form.bairro,\r\n                cidade: form.cidade,\r\n                estado: form.estado,\r\n                CEP: form.CEP\r\n            }\r\n        },\r\n        pagamento: {\r\n            valor: tipoPagamentoSelecionado === \"cartao\" ? \r\n                        form.parcelasCartaoSelecionada.totalAmount :\r\n                        valorTotal,\r\n//            forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\r\n            forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : tipoPagamentoSelecionado,\r\n            parcelas: tipoPagamentoSelecionado === \"cartao\" ? \r\n                        form.parcelasCartaoSelecionada.quantity : 1,\r\n            enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\r\n            endereco: {\r\n                local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\r\n                numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\r\n                complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\r\n                bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\r\n                cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\r\n                estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\r\n                CEP: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\r\n            },\r\n            cartao: tipoPagamentoSelecionado === \"cartao\" ? {\r\n                nomeCompleto: form.nomeCartao.trim(),\r\n                codigoArea: form.telefone.slice(0,2),\r\n                telefone: form.telefone.slice(2).trim(),\r\n                dataDeNascimento: form.dataDeNascimento,\r\n                credit_card_token: form.credit_card_token,\r\n                cpf: form.CPF                \r\n            } : undefined \r\n        }\r\n    }, getHeaders(token))\r\n    .then (response => {\r\n        console.log('f pagto: ', response.data.pedido.pagamento.forma);\r\n        dispatch({type: NOVO_PEDIDO, payload: response.data});\r\n        response.data.pedido.pagamento.forma === 'outro' ?\r\n        dispatch(pagarPedidoOutro(response.data.pedido.pagamento._id, token, senderHash, cb)) :\r\n        dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb)); \r\n})\r\n    .catch(e => cb (errorHandling(e)));\r\n};\r\n\r\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\r\n        axios.post(\r\n            `${API}/${versao}/api/pagamentos/pagar/${id}?Loja=${loja}`, \r\n            {senderHash}, \r\n            getHeaders(token)\r\n)\r\n.then (response => {\r\n    console.log('pagamento: ', response.data)\r\n    dispatch({type: PAGAR_PEDIDO, payload: response.data});\r\n    cb(null);\r\n    Router.push('/sucesso');\r\n    dispatch(cleanCarrinho());        \r\n})\r\n.catch(e => cb (errorHandling(e)));\r\n}\r\n\r\nexport const pagarPedidoOutro = (id, token, senderHash, cb = null) => dispatch => {\r\n    axios.post(\r\n        `${API}/${versao}/api/pagamentos/pagar/${id}?Loja=${loja}`, \r\n        {senderHash}, \r\n        getHeaders(token)\r\n)\r\n.then (response => {\r\ndispatch({type: PAGAR_PEDIDO, payload: response.data});\r\ncb(null);\r\nRouter.push('/sucesso');\r\ndispatch(cleanCarrinho());        \r\n})\r\n.catch(e => cb (errorHandling(e)));\r\n}\r\n\r\n/*\r\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\r\n    cb(null);\r\n    Router.push('/sucesso');\r\n    dispatch(cleanCarrinho());        \r\n};\r\n*/\r\nexport default {\r\n    setForm,\r\n    cleanForm,\r\n    setTipoPagamento,\r\n    getSessionPagamento,\r\n    novoPedido,\r\n    pagarPedido\r\n};"]},"metadata":{},"sourceType":"module"}