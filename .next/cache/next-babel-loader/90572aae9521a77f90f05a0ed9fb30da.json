{"ast":null,"code":"import { SET_FORM, CLEAN_FORM, SET_TIPO_PAGAMENTO, FETCH_SESSION_ID, FETCH_SENDER_HASH, NOVO_PEDIDO, PAGAR_PEDIDO } from '../types';\nimport axios from 'axios';\nimport { API, versao, loja } from '../../config';\nimport { getCart } from '../../utils/cart';\nimport { getHeaders } from './helpers';\nimport errorHandling from './errorHandling';\nimport Router from 'next/router';\nimport { cleanCarrinho } from './carrinhoActions';\nexport const setForm = (payload, prefix) => dispatch => {\n  dispatch({\n    type: SET_FORM,\n    payload,\n    prefix\n  });\n  return Promise.resolve();\n};\nexport const cleanForm = () => ({\n  type: CLEAN_FORM\n});\nexport const setTipoPagamento = tipoPagamentoSelecionado => ({\n  type: SET_TIPO_PAGAMENTO,\n  tipoPagamentoSelecionado\n});\nexport const getSessionPagamento = () => dispatch => {\n  axios.get(`${API}/${versao}/api/pagamentos/session`).then(response => {\n    dispatch({\n      type: FETCH_SESSION_ID,\n      payload: resposta.data\n    });\n    PagSeguroDirectPayment.setSessionId(response.data.sessionId);\n    let senderHash = PagSeguroDirectPayment.getSenderHash();\n    dispatch({\n      type: FETCH_SENDER_HASH,\n      senderHash\n    });\n  }).catch(e => console.log(e));\n};\nexport const novoPedido = (form, freteSelecionado, tipoPagamentoSelecionado, valorTotal, token, senderHash, carrinho = getCart(), cb = null) => dispatch => {\n  axios.post(`${API}/${versao}/api/pedidos?loja=${loja}`, {\n    carrinho,\n    entrega: {\n      custo: freteSelecionado.Valor.replace(',', '.'),\n      tipo: freteSelecionado.Codigo.toString(),\n      prazo: freteSelecionado.PrazoEntrega,\n      endereco: {\n        local: form.local,\n        numero: form.numero,\n        complemento: form.complemento,\n        bairro: form.bairro,\n        cidade: form.cidade,\n        estado: form.estado,\n        CEP: form.CEP\n      }\n    },\n    pagamento: {\n      valor: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.totalAmount : valorTotal,\n      forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\n      parcelas: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.quantity : 1,\n      enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\n      endereco: {\n        local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\n        numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\n        complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\n        bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\n        cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\n        estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\n        CEP: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\n      },\n      cartao: tipoPagamentoSelecionado === \"cartao\" ? {\n        nomeCompleto: form.nomeCartao.trim(),\n        codigoArea: form.telefone.slice(0, 2),\n        telefone: form.telefone.slice(2).trim(),\n        dataDeNascimento: form.dataDeNascimento,\n        credit_card_token: form.credit_card_token,\n        cpf: form.CPF\n      } : undefined\n    }\n  }, getHeaders(token)).then(response => {\n    dispatch({\n      type: NOVO_PEDIDO,\n      payload: resposta.data\n    });\n    dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb));\n  }).catch(e => cb(errorHandling(e)));\n};\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\n  axios.post(`${API}/${versao}/api/pagamentos/pagar/${id}?Loja=${loja}`, {\n    senderHash\n  }, getHeaders(token)).then(response => {\n    dispatch({\n      type: PAGAR_PEDIDO,\n      payload: response.data\n    });\n    cb(nulo);\n    Router.push('/sucesso');\n    dispatch(cleanCarrinho());\n  }).catch(e => cb(errorHandling(e)));\n};\nexport default {\n  setForm,\n  cleanForm,\n  setTipoPagamento,\n  getSessionPagamento,\n  novoPedido,\n  pagarPedido\n};","map":{"version":3,"sources":["F:/APLICACAO/lojavirtual/redux/actions/checkoutActions.js"],"names":["SET_FORM","CLEAN_FORM","SET_TIPO_PAGAMENTO","FETCH_SESSION_ID","FETCH_SENDER_HASH","NOVO_PEDIDO","PAGAR_PEDIDO","axios","API","versao","loja","getCart","getHeaders","errorHandling","Router","cleanCarrinho","setForm","payload","prefix","dispatch","type","Promise","resolve","cleanForm","setTipoPagamento","tipoPagamentoSelecionado","getSessionPagamento","get","then","response","resposta","data","PagSeguroDirectPayment","setSessionId","sessionId","senderHash","getSenderHash","catch","e","console","log","novoPedido","form","freteSelecionado","valorTotal","token","carrinho","cb","post","entrega","custo","Valor","replace","tipo","Codigo","toString","prazo","PrazoEntrega","endereco","local","numero","complemento","bairro","cidade","estado","CEP","pagamento","valor","parcelasCartaoSelecionada","totalAmount","forma","parcelas","quantity","enderecoEntregaIgualCobranca","dadosEntregaIgualDadosCobranca","dadosCobranca","cartao","nomeCompleto","nomeCartao","trim","codigoArea","telefone","slice","dataDeNascimento","credit_card_token","cpf","CPF","undefined","pagarPedido","pedido","_id","id","nulo","push"],"mappings":"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","sourcesContent":["import {\r\n    SET_FORM,\r\n    CLEAN_FORM,\r\n    SET_TIPO_PAGAMENTO,\r\n    FETCH_SESSION_ID,\r\n    FETCH_SENDER_HASH,\r\n    NOVO_PEDIDO,\r\n    PAGAR_PEDIDO\r\n} from '../types';\r\nimport axios from 'axios';\r\nimport {API, versao, loja} from '../../config';\r\nimport {getCart} from '../../utils/cart';\r\nimport {getHeaders} from './helpers';\r\nimport errorHandling from './errorHandling';\r\nimport Router from 'next/router';\r\nimport {cleanCarrinho} from './carrinhoActions';\r\n\r\nexport const setForm = (payload, prefix) => dispatch => {\r\n    dispatch({type: SET_FORM, payload, prefix});\r\n    return Promise.resolve();\r\n}\r\n\r\nexport const cleanForm = () => ({type: CLEAN_FORM});\r\n\r\nexport const setTipoPagamento = (tipoPagamentoSelecionado) => \r\n                        ({type: SET_TIPO_PAGAMENTO, tipoPagamentoSelecionado});\r\n\r\nexport const getSessionPagamento = () => (dispatch) => {\r\n    axios.get(`${API}/${versao}/api/pagamentos/session`).then ((response) => {\r\n        dispatch({type: FETCH_SESSION_ID, payload: resposta.data});\r\n\r\n        PagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n        let senderHash = PagSeguroDirectPayment.getSenderHash();\r\n        dispatch({type: FETCH_SENDER_HASH, senderHash});\r\n    })\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nexport const novoPedido = (\r\n    form, freteSelecionado, tipoPagamentoSelecionado, \r\n    valorTotal, token, senderHash, carrinho = getCart(), cb = null\r\n) => dispatch => {\r\n    axios.post(`${API}/${versao}/api/pedidos?loja=${loja}`, {\r\n        carrinho,\r\n        entrega: {\r\n            custo: freteSelecionado.Valor.replace(',', '.'),\r\n            tipo: (freteSelecionado.Codigo).toString(),\r\n            prazo: freteSelecionado.PrazoEntrega,\r\n            endereco: {\r\n                local: form.local,\r\n                numero: form.numero,\r\n                complemento: form.complemento,\r\n                bairro: form.bairro,\r\n                cidade: form.cidade,\r\n                estado: form.estado,\r\n                CEP: form.CEP\r\n            }\r\n        },\r\n        pagamento: {\r\n            valor: tipoPagamentoSelecionado === \"cartao\"? \r\n                        form.parcelasCartaoSelecionada.totalAmount:\r\n                        valorTotal,\r\n            forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\r\n            parcelas: tipoPagamentoSelecionado === \"cartao\" ? \r\n                        form.parcelasCartaoSelecionada.quantity : 1,\r\n            enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\r\n            endereco: {\r\n                local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\r\n                numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\r\n                complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\r\n                bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\r\n                cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\r\n                estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\r\n                CEP: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\r\n            },\r\n            cartao: tipoPagamentoSelecionado === \"cartao\"? {\r\n                nomeCompleto: form.nomeCartao.trim(),\r\n                codigoArea: form.telefone.slice(0,2),\r\n                telefone: form.telefone.slice(2).trim(),\r\n                dataDeNascimento: form.dataDeNascimento,\r\n                credit_card_token: form.credit_card_token,\r\n                cpf: form.CPF                \r\n            } : undefined \r\n        }\r\n    }, getHeaders(token))\r\n    .then (response => {\r\n        dispatch({type: NOVO_PEDIDO, payload: resposta.data});\r\n        dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb));\r\n    })\r\n    .catch(e => cb (errorHandling(e)));\r\n};\r\n\r\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\r\n    axios.post(\r\n        `${API}/${versao}/api/pagamentos/pagar/${id}?Loja=${loja}`, \r\n        {senderHash}, \r\n        getHeaders(token)\r\n    )\r\n    .then (response => {\r\n        dispatch({type: PAGAR_PEDIDO, payload: response.data});\r\n        cb(nulo);\r\n        Router.push('/sucesso');\r\n        dispatch(cleanCarrinho());        \r\n    })\r\n    .catch(e => cb (errorHandling(e)));\r\n}\r\n\r\nexport default {\r\n    setForm,\r\n    cleanForm,\r\n    setTipoPagamento,\r\n    getSessionPagamento,\r\n    novoPedido,\r\n    pagarPedido\r\n};"]},"metadata":{},"sourceType":"module"}