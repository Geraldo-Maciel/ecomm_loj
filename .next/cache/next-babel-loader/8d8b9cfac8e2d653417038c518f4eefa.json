{"ast":null,"code":"var _jsxFileName = \"F:\\\\APLICACAO\\\\lojavirtual\\\\containers\\\\Checkout\\\\CheckoutButton.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getCart } from '../../utils/cart';\nimport { validateCPF } from '../../utils/validate';\nimport AlertGeral from '../../components/Alert/Geral';\n\nclass CheckoutButton extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      disabled: false,\n      aviso: null\n    });\n\n    _defineProperty(this, \"toggleDisabled\", () => this.setState({\n      disabled: !this.state.disabled\n    }));\n  }\n\n  calcularValorTotal(carrinho, freteSelecionado) {\n    const valorProdutos = carrinho.reduce((all, item) => all + Number(item.precoUnitario) * Number(item.quantidade), 0);\n    const valorFrete = Number(freteSelecionado.Valor.replace(',', '.'));\n    return valorProdutos + valorFrete;\n  }\n\n  validarFormulario() {\n    const {\n      nome,\n      CPF,\n      dataDeNascimento,\n      telefone,\n      local,\n      numero,\n      bairro,\n      cidade,\n      estado,\n      CEP,\n      dadosCobranca,\n      dadosEntregaIgualDadosCobranca,\n      CPFboleto,\n      numeroCartao,\n      nomeCartao,\n      mesCartao,\n      anoCartao,\n      parcelasCartaoSelecionada,\n      CVVCartao,\n      credit_card_token\n    } = this.props.form;\n    const {\n      tipoPagamentoSelecionado\n    } = this.props;\n    let temErro = false;\n    if (!nome) temErro = true;\n    if (!CPF || CPF.length !== 14) temErro = true;\n    if (CPF && CPF.length === 14 && !validateCPF(CPF)) temErro = true;\n    if (!dataDeNascimento || dataDeNascimento.length !== 10) temErro = true;\n    if (!telefone || telefone.length < 11) temErro = true;\n    if (!local) temErro = true;\n    if (!numero) temErro = true;\n    if (!bairro) temErro = true;\n    if (!cidade) temErro = true;\n    if (!estado) temErro = true;\n    if (!CEP || CEP.length !== 9) temErro = true;\n\n    if (!dadosEntregaIgualDadosCobranca) {\n      if (!dadosCobranca.local) temErro = true;\n      if (!dadosCobranca.numero) temErro = true;\n      if (!dadosCobranca.bairro) temErro = true;\n      if (!dadosCobranca.cidade) temErro = true;\n      if (!dadosCobranca.estado) temErro = true;\n      if (!dadosCobranca.CEP || dadosCobranca.CEP.length !== 9) temErro = true;\n    }\n\n    if (tipoPagamentoSelecionado === \"boleto\") {\n      if (!CPFboleto && !CPF) temErro = true;\n      if (CPFboleto && CPFboleto.length !== 14 && !validateCPF(CPFboleto)) temErro = true;\n    } else {\n      if (!numeroCartao || numeroCartao.length !== 19) temErro = true;\n      if (!nomeCartao) temErro = true;\n      if (!mesCartao || mesCartao.length !== 2) temErro = true;\n      if (!anoCartao || anoCartao.length !== 4) temErro = true;\n      if (!parcelasCartaoSelecionada) temErro = true;\n      if (!credit_card_token) temErro = true;\n      if (!CVVCartao || CVVCartao.length !== 3) temErro = true;\n    }\n\n    return !temErro;\n  }\n\n  validate() {\n    const {\n      freteSelecionado,\n      tipoPagamentoSelecionado\n    } = this.props;\n    const validarFormulario = this.validarFormulario();\n    return validarFormulario && freteSelecionado && tipoPagamentoSelecionado;\n  }\n\n  handleSubmit() {\n    const {\n      form,\n      freteSelecionado,\n      token,\n      senderHash,\n      tipoPagamentoSelecionado\n    } = this.props;\n    const carrinho = getCart();\n    const valorTotal = this.calcularValorTotal(carrinho, freteSelecionado);\n    console.log('validacao: ', this.validate());\n    if (!this.validate()) return null;\n    this.toggleDisabled();\n    console.log('antes de gravar novo pedido');\n    this.props.novoPedido(form, freteSelecionado, tipoPagamentoSelecionado, valorTotal, token, senderHash, carrinho, error => {\n      //                console.log('pedido finalizado');\n      if (error) {\n        this.setState({\n          aviso: {\n            status: false,\n            message: error.message\n          }\n        });\n      }\n\n      this.toggleDisabled();\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"flex flex-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, __jsx(AlertGeral, {\n      aviso: this.state.aviso,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), __jsx(\"button\", {\n      className: \"btn btn-cta btn-success\",\n      disabled: this.state.disabled,\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, this.state.disabled ? \"ENVIANDO...\" : \"CONCLUIR PEDIDO\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  carrinho: state.carrinho.carrinho,\n  usuario: state.auth.usuario,\n  cliente: state.cliente.cliente,\n  freteSelecionado: state.carrinho.freteSelecionado,\n  form: state.checkout.form,\n  token: state.auth.token,\n  senderHash: state.checkout.senderHash,\n  tipoPagamentoSelecionado: state.checkout.tipoPagamentoSelecionado\n});\n\nexport default connect(mapStateToProps, actions)(CheckoutButton);","map":{"version":3,"sources":["F:/APLICACAO/lojavirtual/containers/Checkout/CheckoutButton.js"],"names":["React","Component","connect","actions","getCart","validateCPF","AlertGeral","CheckoutButton","disabled","aviso","setState","state","calcularValorTotal","carrinho","freteSelecionado","valorProdutos","reduce","all","item","Number","precoUnitario","quantidade","valorFrete","Valor","replace","validarFormulario","nome","CPF","dataDeNascimento","telefone","local","numero","bairro","cidade","estado","CEP","dadosCobranca","dadosEntregaIgualDadosCobranca","CPFboleto","numeroCartao","nomeCartao","mesCartao","anoCartao","parcelasCartaoSelecionada","CVVCartao","credit_card_token","props","form","tipoPagamentoSelecionado","temErro","length","validate","handleSubmit","token","senderHash","valorTotal","console","log","toggleDisabled","novoPedido","error","status","message","render","mapStateToProps","usuario","auth","cliente","checkout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport { getCart } from '../../utils/cart';\r\nimport { validateCPF } from '../../utils/validate';\r\nimport AlertGeral from '../../components/Alert/Geral';\r\n\r\nclass CheckoutButton extends Component {\r\n    state = { \r\n        disabled: false, \r\n        aviso: null \r\n    }\r\n\r\n    toggleDisabled = () => this.setState({ disabled: !this.state.disabled });\r\n\r\n    calcularValorTotal(carrinho, freteSelecionado){\r\n        const valorProdutos = carrinho.reduce(\r\n                            (all, item) => \r\n                            all + (Number(item.precoUnitario) * Number(item.quantidade)) , 0\r\n                        );\r\n        const valorFrete = Number(freteSelecionado.Valor.replace(',','.'));\r\n        return valorProdutos + valorFrete;\r\n    }\r\n\r\n    validarFormulario(){\r\n        const {  \r\n            nome, CPF, dataDeNascimento, telefone,\r\n            local, numero, bairro, cidade, estado, CEP,\r\n            dadosCobranca, dadosEntregaIgualDadosCobranca,\r\n            CPFboleto,\r\n            numeroCartao, nomeCartao, mesCartao, anoCartao, parcelasCartaoSelecionada, CVVCartao,\r\n            credit_card_token\r\n        } = this.props.form;\r\n        const { tipoPagamentoSelecionado } = this.props;\r\n\r\n        let temErro = false;\r\n\r\n        if(!nome) temErro = true;\r\n        if(!CPF || CPF.length !== 14) temErro = true;\r\n        if(CPF && CPF.length === 14 && !validateCPF(CPF)) temErro = true;\r\n        if(!dataDeNascimento || dataDeNascimento.length !== 10) temErro = true;\r\n        if(!telefone || telefone.length < 11) temErro = true;\r\n\r\n        if(!local) temErro = true;\r\n        if(!numero) temErro = true;\r\n        if(!bairro) temErro = true;\r\n        if(!cidade) temErro = true;\r\n        if(!estado) temErro = true;\r\n        if(!CEP || CEP.length !== 9) temErro = true;\r\n\r\n        if(!dadosEntregaIgualDadosCobranca){\r\n            if(!dadosCobranca.local) temErro = true;\r\n            if(!dadosCobranca.numero) temErro = true;\r\n            if(!dadosCobranca.bairro) temErro = true;\r\n            if(!dadosCobranca.cidade) temErro = true;\r\n            if(!dadosCobranca.estado) temErro = true;\r\n            if(!dadosCobranca.CEP || dadosCobranca.CEP.length !== 9) temErro = true;\r\n        }\r\n\r\n        if(tipoPagamentoSelecionado === \"boleto\"){\r\n            if(!CPFboleto && !CPF) temErro = true;\r\n            if(CPFboleto && CPFboleto.length !== 14 && !validateCPF(CPFboleto)) temErro = true;\r\n        } else {\r\n            if(!numeroCartao || numeroCartao.length !== 19) temErro = true;\r\n            if(!nomeCartao) temErro = true;\r\n            if(!mesCartao || mesCartao.length !== 2) temErro = true;\r\n            if(!anoCartao || anoCartao.length !== 4) temErro = true;\r\n            if(!parcelasCartaoSelecionada) temErro = true;\r\n            if(!credit_card_token) temErro = true;\r\n            if(!CVVCartao || CVVCartao.length !== 3) temErro = true;\r\n        }\r\n\r\n        return !temErro;\r\n    }\r\n\r\n    validate(){\r\n        const { freteSelecionado, tipoPagamentoSelecionado } = this.props;\r\n        const validarFormulario = this.validarFormulario();\r\n        return validarFormulario && freteSelecionado && tipoPagamentoSelecionado;\r\n    }\r\n\r\n    handleSubmit(){\r\n        const {\r\n            form, freteSelecionado, token, senderHash, tipoPagamentoSelecionado\r\n        } = this.props;\r\n        const carrinho = getCart();\r\n        const valorTotal = this.calcularValorTotal(carrinho, freteSelecionado);\r\n        console.log('validacao: ', this.validate());\r\n        if(!this.validate()) return null;\r\n        this.toggleDisabled();\r\n        console.log('antes de gravar novo pedido');\r\n        this.props.novoPedido(\r\n            form, freteSelecionado, tipoPagamentoSelecionado, \r\n            valorTotal, token, senderHash, carrinho, (error) => {\r\n//                console.log('pedido finalizado');\r\n                if(error){\r\n                    this.setState({ aviso: { status:false, message: error.message } })\r\n                }\r\n                this.toggleDisabled();\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"flex flex-right\">\r\n                <AlertGeral aviso={this.state.aviso} />\r\n                <button \r\n                    className=\"btn btn-cta btn-success\"\r\n                    disabled={this.state.disabled}\r\n                    onClick={() => this.handleSubmit()} >\r\n                    <span>{ \r\n                        this.state.disabled ? \r\n                        \"ENVIANDO...\" : \r\n                        \"CONCLUIR PEDIDO\"\r\n                    }</span>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    carrinho: state.carrinho.carrinho,\r\n    usuario: state.auth.usuario,\r\n    cliente: state.cliente.cliente,\r\n    freteSelecionado: state.carrinho.freteSelecionado,\r\n    form: state.checkout.form,\r\n    token: state.auth.token,\r\n    senderHash: state.checkout.senderHash,\r\n    tipoPagamentoSelecionado: state.checkout.tipoPagamentoSelecionado\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(CheckoutButton);"]},"metadata":{},"sourceType":"module"}