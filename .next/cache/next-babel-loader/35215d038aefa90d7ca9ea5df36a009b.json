{"ast":null,"code":"var _jsxFileName = \"F:\\\\ASSESSOR_ECO\\\\ECO_LOJ\\\\containers\\\\Checkout\\\\DadosFrete.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport FormRadio from '../../components/Inputs/FormRadio';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getCart } from '../../utils/cart';\nimport { formatMoney, codigosCorreios } from '../../utils';\n\nclass DadosFrete extends Component {\n  componentDidMount() {\n    const {\n      form\n    } = this.props;\n\n    if (form) {\n      this.props.calcularFrete(form.CEP, getCart());\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.form.CEP !== this.props.form.CEP && this.props.form.CEP.length === 9) {\n      this.props.calcularFrete(this.props.form.CEP, getCart());\n    }\n  }\n\n  selecionarFrete(frete) {\n    this.props.selecionarFrete(frete);\n  }\n\n  render() {\n    const {\n      fretes,\n      freteSelecionado\n    } = this.props; //        console.log('fretes: ', fretes);\n\n    console.log('frete selecionado: ', freteSelecionado);\n    return __jsx(\"div\", {\n      className: \"Dados-Frete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"M\\xC9TODOS DE ENTREGA\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"flex horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, (fretes || []).map((frete, index) => __jsx(\"div\", {\n      className: \"flex-1\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, __jsx(FormRadio, {\n      name: \"frete_selecionado\",\n      checked: freteSelecionado ? freteSelecionado.Codigo === frete.Codigo : false,\n      onChange: () => this.selecionarFrete(frete),\n      label: `\n                                        ${codigosCorreios[frete.Codigo]} \n                                        (${frete.PrazoEntrega} dias úteis) - \n                                        ${formatMoney(frete.Valor.replace(',', '.'))}\n                                    `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  usuario: state.auth.usuario,\n  carrinho: state.carrinho.carrinho,\n  cliente: state.cliente.cliente,\n  form: state.checkout.form,\n  fretes: state.carrinho.fretes,\n  freteSelecionado: state.carrinho.freteSelecionado\n});\n\nexport default connect(mapStateToProps, actions)(DadosFrete);","map":{"version":3,"sources":["F:/ASSESSOR_ECO/ECO_LOJ/containers/Checkout/DadosFrete.js"],"names":["React","Component","FormRadio","connect","actions","getCart","formatMoney","codigosCorreios","DadosFrete","componentDidMount","form","props","calcularFrete","CEP","componentDidUpdate","prevProps","length","selecionarFrete","frete","render","fretes","freteSelecionado","console","log","map","index","Codigo","PrazoEntrega","Valor","replace","mapStateToProps","state","usuario","auth","carrinho","cliente","checkout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport FormRadio from '../../components/Inputs/FormRadio';\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport { getCart } from '../../utils/cart';\r\nimport { formatMoney, codigosCorreios } from '../../utils';\r\n\r\nclass DadosFrete extends Component{\r\n    \r\n    componentDidMount(){\r\n        const { form } = this.props;\r\n        if(form){\r\n            this.props.calcularFrete(form.CEP, getCart());\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.form.CEP !== this.props.form.CEP && this.props.form.CEP.length === 9){\r\n            this.props.calcularFrete(this.props.form.CEP, getCart());\r\n        }\r\n    }\r\n\r\n    selecionarFrete(frete){\r\n        this.props.selecionarFrete(frete);\r\n    }\r\n\r\n    render(){\r\n        const { fretes, freteSelecionado } = this.props;\r\n//        console.log('fretes: ', fretes);\r\n        console.log('frete selecionado: ', freteSelecionado);\r\n        return (\r\n            <div className=\"Dados-Frete\">\r\n                <h2>MÉTODOS DE ENTREGA</h2>\r\n                <br />\r\n                <div className=\"flex horizontal\">\r\n                    {\r\n                        (fretes || []).map((frete, index) => (\r\n                            <div className=\"flex-1\" key={index}>\r\n                                <FormRadio \r\n                                    name=\"frete_selecionado\" \r\n                                    checked={freteSelecionado ? freteSelecionado.Codigo === frete.Codigo : false} \r\n                                    onChange={()=> this.selecionarFrete(frete)}\r\n                                    label={`\r\n                                        ${codigosCorreios[frete.Codigo]} \r\n                                        (${frete.PrazoEntrega} dias úteis) - \r\n                                        ${formatMoney(frete.Valor.replace(',','.'))}\r\n                                    `} />\r\n                            </div>\r\n                        ))\r\n                    }                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    usuario: state.auth.usuario,\r\n    carrinho: state.carrinho.carrinho,\r\n    cliente: state.cliente.cliente,\r\n    form: state.checkout.form,\r\n    fretes: state.carrinho.fretes,\r\n    freteSelecionado: state.carrinho.freteSelecionado\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(DadosFrete);"]},"metadata":{},"sourceType":"module"}