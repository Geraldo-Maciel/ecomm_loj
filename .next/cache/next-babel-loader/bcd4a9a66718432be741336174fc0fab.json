{"ast":null,"code":"var _jsxFileName = \"F:\\\\APLICACAO\\\\lojavirtual\\\\containers\\\\Checkout\\\\DadosPagamento.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport FormRadio from '../../components/Inputs/FormRadio';\nimport FormSimples from '../../components/Inputs/FormSimples';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { formatCPF, formatCartao, formatNumber } from '../../utils/format';\nimport { formatMoney } from '../../utils';\nimport { validateCPF } from '../../utils/validate';\n\nclass DadosPagamento extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      erros: {}\n    });\n\n    _defineProperty(this, \"onChange\", (field, value) => this.props.setForm({\n      [field]: value\n    }).then(() => this.validate()));\n  }\n\n  componentDidMount() {\n    this.props.getSessionPagamento();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      numeroCartao,\n      mesCartao,\n      anoCartao,\n      CVVCartao,\n      credit_card_token,\n      bandeira_cartao,\n      parcelasCartao\n    } = this.props.form;\n    console.log('dados pag-numcartao: ', numeroCartao);\n    console.log('dados pag-mescartao: ', mesCartao);\n    console.log('dados pag-anocartao: ', anoCartao);\n    console.log('dados pag-cvvcartao: ', CVVCartao);\n    console.log('dados pag-credit-card-token-cartao: ', credit_card_token);\n    console.log('dados pag-bandeiracartao: ', bandeira_cartao);\n    console.log('dados pag-parcelascartao: ', parcelasCartao);\n\n    if (!bandeira_cartao && numeroCartao && numeroCartao.split('').join('').length > 7) {\n      this.getBrand();\n    }\n\n    if (!credit_card_token && numeroCartao && numeroCartao.split('').join('').length === 16 && mesCartao && mesCartao.length === 2 && anoCartao && anoCartao.length === 4 && CVVCartao && CVVCartao.length === 3 && bandeira_cartao) this.submitCartaoHash();\n    if (!parcelasCartao && bandeira_cartao || parcelasCartao && bandeira_cartao && prevProps.freteSelecionado !== this.props.freteSelecionado) this.getParcelas();\n  }\n\n  getBrand() {\n    const {\n      numeroCartao\n    } = this.props.form;\n    PagSeguroDirectPayment.getBrand({\n      cardBin: numeroCartao.split('').join('').slice(0, 6),\n      success: r => {\n        console.log('bandeiras: ', r);\n        this.props.setForm({\n          bandeira_cartao: r.brand\n        });\n      },\n      error: r => console.log(r)\n    });\n  }\n\n  submitCartaoHash() {\n    const {\n      numeroCartao,\n      mesCartao,\n      anoCartao,\n      CVVCartao,\n      bandeira_cartao\n    } = this.props.form;\n    const params = {\n      cardNumber: numeroCartao.split('').join(''),\n      brand: bandeira_cartao.name,\n      cvv: CVVCartao,\n      expirationMonth: mesCartao,\n      expirationYear: anoCartao,\n      success: r => {\n        //                console.log('credit card token:', r);\n        this.props.setForm({\n          credit_card_token: r.card.token\n        });\n      },\n      error: r => console.log(r)\n    };\n    PagSeguroDirectPayment.createCardToken(params);\n  }\n\n  getParcelas() {\n    const {\n      freteSelecionado,\n      carrinho\n    } = this.props;\n    const {\n      bandeira_cartao\n    } = this.props.form;\n    let valorTotal = carrinho.reduce((all, item) => all + Number(item.precoUnitario) * Number(item.quantidade), 0);\n    let freteValor = Number(freteSelecionado.Valor.replace(',', '.'));\n    PagSeguroDirectPayment.getInstallments({\n      amount: valorTotal + freteValor,\n      maxInstallmentNoInterest: 6,\n      maxInstallment: 6,\n      brand: bandeira_cartao.name,\n      success: data => {\n        //                console.log(data);                \n        this.props.setForm({\n          parcelasCartao: data.installments\n        });\n        this.props.setForm({\n          parcelasCartaoSelecionada: data.installments[bandeira_cartao.name][0]\n        });\n      },\n      error: r => console.log(r)\n    });\n  }\n\n  renderOpcoesPagamento() {\n    const {\n      tipoPagamentoSelecionado\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"flex horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"flex-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, __jsx(FormRadio, {\n      name: \"tipo_pagamento_selecionado\",\n      checked: tipoPagamentoSelecionado === 'boleto',\n      onChange: () => this.props.setTipoPagamento(\"boleto\"),\n      label: \"Boleto Banc\\xE1rio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"flex-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, __jsx(FormRadio, {\n      name: \"tipo_pagamento_selecionado\",\n      checked: tipoPagamentoSelecionado === 'cartao',\n      onChange: () => this.props.setTipoPagamento(\"cartao\"),\n      label: \"Cart\\xE3o de Cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  validate() {\n    const {\n      tipoPagamentoSelecionado\n    } = this.props;\n    const {\n      CPF,\n      CPFboleto,\n      numeroCartao,\n      nomeCartao,\n      mesCartao,\n      anoCartao,\n      parcelasCartaoSelecionada,\n      CVVCartao\n    } = this.props.form;\n    const erros = {};\n\n    if (tipoPagamentoSelecionado === \"boleto\") {\n      if (!CPFboleto && !CPF) erros.CPFboleto = \"Preencha aqui com o seu CPF\";\n      if (CPFboleto && CPFboleto.length !== 14 && !validateCPF(CPFboleto)) erros.CPFboleto = \"Preencha aqui com o seu CPF corretamente\";\n    }\n\n    ;\n\n    if (tipoPagamentoSelecionado === \"cartao\") {\n      if (!numeroCartao || numeroCartao.length !== 19) erros.numeroCartao = \"Preencha aqui com o número do seu cartão\";\n      if (!nomeCartao) erros.nomeCartao = \"Preencha aqui com o nome que está no cartão\";\n      if (!mesCartao || mesCartao.length !== 2) erros.mesCartao = \"Preencha aqui com o mês de vencimento do cartão\";\n      if (!anoCartao || anoCartao.length !== 4) erros.anoCartao = \"Preencha aqui com o ano de vencimento do cartão\";\n      if (!parcelasCartaoSelecionada) erros.parcelasCartaoSelecionada = \"Selecione uma forma de pagamento\";\n      if (!CVVCartao || CVVCartao.length !== 3) erros.CVVCartao = \"Preencha aqui com o código de segurança do cartão\";\n    }\n\n    ;\n    this.setState({\n      erros\n    });\n    return !(Object.keys(erros).length > 0);\n  }\n\n  renderPagamentoComBoleto() {\n    const {\n      CPF,\n      CPFboleto\n    } = this.props.form;\n    const {\n      erros\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"Dados-Pagamento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, __jsx(FormSimples, {\n      value: CPFboleto || CPF,\n      name: \"CPF\",\n      erro: erros.CPFboleto,\n      placeholder: \"CPF\",\n      label: \"CPF\",\n      onChange: e => this.onChange(\"CPFboleto\", formatCPF(e.target.value)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  renderPagamentoComCartao() {\n    const {\n      nomeCartao,\n      numeroCartao,\n      CVVCartao,\n      mesCartao,\n      anoCartao,\n      parcelasCartao,\n      parcelasCartaoSelecionada,\n      bandeira_cartao\n    } = this.props.form;\n    const {\n      erros\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"Dados-Pagamento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, __jsx(FormSimples, {\n      value: nomeCartao,\n      erro: erros.nomeCartao,\n      name: \"nomeCartao\",\n      placeholder: \"Nome como escrito no cart\\xE3o\",\n      label: \"Nome Completo no Cart\\xE3o\",\n      onChange: e => this.onChange(\"nomeCartao\", e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"flex horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"flex-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, __jsx(FormSimples, {\n      value: numeroCartao,\n      erro: erros.numeroCartao,\n      name: \"numeroCartao\",\n      placeholder: \"XXXX XXXX XXXX XXXX\",\n      label: \"N\\xFAmero do Cart\\xE3o\",\n      onChange: e => this.onChange(\"numeroCartao\", formatCartao(e.target.value)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"flex-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, __jsx(FormSimples, {\n      value: CVVCartao,\n      erro: erros.CVVCartao,\n      name: \"CVVCartao\",\n      placeholder: \"XXX\",\n      label: \"C\\xF3digo de Seguran\\xE7a do Cart\\xE3o\",\n      onChange: e => this.onChange(\"CVVCartao\", formatNumber(e.target.value, 3)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }))), __jsx(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, \" Data de Validade \")), __jsx(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, __jsx(FormSimples, {\n      value: mesCartao,\n      erro: erros.mesCartao,\n      name: \"mesCartao\",\n      placeholder: \"MM\",\n      label: \"M\\xEAs\",\n      onChange: e => this.onChange(\"mesCartao\", formatNumber(e.target.value, 2)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }), __jsx(\"span\", {\n      className: \"slash-pagamento\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, \" \\xA0 / \\xA0 \"), __jsx(FormSimples, {\n      value: anoCartao,\n      erro: erros.anoCartao,\n      name: \"anoCartao\",\n      placeholder: \"AAAA\",\n      label: \"Ano\",\n      onChange: e => this.onChange(\"anoCartao\", formatNumber(e.target.value, 4)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"form-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }, \" Parcelas \")), parcelasCartao && parcelasCartaoSelecionada && __jsx(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, __jsx(\"select\", {\n      name: \"parcela\",\n      value: parcelasCartaoSelecionada.quantity,\n      onChange: e => this.onChange(\"parcelasCartaoSelecionada\", parcelasCartao[bandeira_cartao.name][e.target.value - 1]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, !parcelasCartaoSelecionada && __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 37\n      }\n    }, \" Selecione a quantidade de parcelas para pagamento \"), parcelasCartao[bandeira_cartao.name].slice(0, 6).map((item, index) => __jsx(\"option\", {\n      key: index,\n      value: item.quantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 41\n      }\n    }, item.quantity, \" x de \", formatMoney(item.totalAmount / item.quantity), \" sem juros\"))), erros.parcelasCartaoSelecionada && __jsx(\"small\", {\n      className: \"erro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, \" \", erros.parcelasCartaoSelecionada, \" \")));\n  }\n\n  render() {\n    const {\n      tipoPagamentoSelecionado\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"Dados-Pagamento-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, \" DADOS DE PAGAMENTO \"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }), this.renderOpcoesPagamento(), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }\n    }), tipoPagamentoSelecionado === 'boleto' && this.renderPagamentoComBoleto(), tipoPagamentoSelecionado === 'cartao' && this.renderPagamentoComCartao());\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  usuario: state.auth.usuario,\n  carrinho: state.carrinho.carrinho,\n  cliente: state.cliente.cliente,\n  form: state.checkout.form,\n  tipoPagamentoSelecionado: state.checkout.tipoPagamentoSelecionado,\n  sessionId: state.checkout.sessionId,\n  senderHash: state.checkout.senderHash,\n  freteSelecionado: state.carrinho.freteSelecionado\n});\n\nexport default connect(mapStateToProps, actions)(DadosPagamento);","map":{"version":3,"sources":["F:/APLICACAO/lojavirtual/containers/Checkout/DadosPagamento.js"],"names":["React","Component","FormRadio","FormSimples","connect","actions","formatCPF","formatCartao","formatNumber","formatMoney","validateCPF","DadosPagamento","erros","field","value","props","setForm","then","validate","componentDidMount","getSessionPagamento","componentDidUpdate","prevProps","numeroCartao","mesCartao","anoCartao","CVVCartao","credit_card_token","bandeira_cartao","parcelasCartao","form","console","log","split","join","length","getBrand","submitCartaoHash","freteSelecionado","getParcelas","PagSeguroDirectPayment","cardBin","slice","success","r","brand","error","params","cardNumber","name","cvv","expirationMonth","expirationYear","card","token","createCardToken","carrinho","valorTotal","reduce","all","item","Number","precoUnitario","quantidade","freteValor","Valor","replace","getInstallments","amount","maxInstallmentNoInterest","maxInstallment","data","installments","parcelasCartaoSelecionada","renderOpcoesPagamento","tipoPagamentoSelecionado","setTipoPagamento","CPF","CPFboleto","nomeCartao","setState","Object","keys","renderPagamentoComBoleto","state","e","onChange","target","renderPagamentoComCartao","quantity","map","index","totalAmount","render","mapStateToProps","usuario","auth","cliente","checkout","sessionId","senderHash"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAoD,oBAApD;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,sBAA1B;;AAEA,MAAMC,cAAN,SAA6BV,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAE3B;AAACW,MAAAA,KAAK,EAAE;AAAR,KAF2B;;AAAA,sCAuJxB,CAACC,KAAD,EAAQC,KAAR,KAAkB,KAAKC,KAAL,CAAWC,OAAX,CAAmB;AAAC,OAACH,KAAD,GAASC;AAAV,KAAnB,EAAqCG,IAArC,CAA0C,MAAM,KAAKC,QAAL,EAAhD,CAvJM;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,KAAL,CAAWK,mBAAX;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAM;AACFC,MAAAA,YADE;AAEFC,MAAAA,SAFE;AAGFC,MAAAA,SAHE;AAIFC,MAAAA,SAJE;AAKFC,MAAAA,iBALE;AAMFC,MAAAA,eANE;AAOFC,MAAAA;AAPE,QAQF,KAAKd,KAAL,CAAWe,IARf;AASAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCT,YAArC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCR,SAArC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCP,SAArC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCN,SAArC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDL,iBAApD;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CJ,eAA1C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,cAA1C;;AAEA,QAAI,CAACD,eAAD,IAAoBL,YAApB,IAAoCA,YAAY,CAACU,KAAb,CAAmB,EAAnB,EAAuBC,IAAvB,CAA4B,EAA5B,EAAgCC,MAAhC,GAAyC,CAAjF,EAAoF;AAChF,WAAKC,QAAL;AACH;;AAED,QACI,CAACT,iBAAD,IACAJ,YADA,IACgBA,YAAY,CAACU,KAAb,CAAmB,EAAnB,EAAuBC,IAAvB,CAA4B,EAA5B,EAAgCC,MAAhC,KAA2C,EAD3D,IAEAX,SAFA,IAEaA,SAAS,CAACW,MAAV,KAAqB,CAFlC,IAGAV,SAHA,IAGaA,SAAS,CAACU,MAAV,KAAqB,CAHlC,IAIAT,SAJA,IAIaA,SAAS,CAACS,MAAV,KAAqB,CAJlC,IAKAP,eANJ,EAOE,KAAKS,gBAAL;AAEF,QAAK,CAACR,cAAD,IAAmBD,eAApB,IACCC,cAAc,IAAID,eAAlB,IAAqCN,SAAS,CAACgB,gBAAV,KAA+B,KAAKvB,KAAL,CAAWuB,gBADpF,EAEE,KAAKC,WAAL;AACL;;AAEDH,EAAAA,QAAQ,GAAG;AACP,UAAM;AAACb,MAAAA;AAAD,QAAiB,KAAKR,KAAL,CAAWe,IAAlC;AACAU,IAAAA,sBAAsB,CAACJ,QAAvB,CAAgC;AAC5BK,MAAAA,OAAO,EAAElB,YAAY,CAACU,KAAb,CAAmB,EAAnB,EAAuBC,IAAvB,CAA4B,EAA5B,EAAgCQ,KAAhC,CAAsC,CAAtC,EAAwC,CAAxC,CADmB;AAE5BC,MAAAA,OAAO,EAAGC,CAAD,IAAO;AACZb,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BY,CAA3B;AACA,aAAK7B,KAAL,CAAWC,OAAX,CAAmB;AAACY,UAAAA,eAAe,EAAEgB,CAAC,CAACC;AAApB,SAAnB;AACH,OAL2B;AAM5BC,MAAAA,KAAK,EAAGF,CAAD,IAAOb,OAAO,CAACC,GAAR,CAAYY,CAAZ;AANc,KAAhC;AAQH;;AAEDP,EAAAA,gBAAgB,GAAG;AACf,UAAM;AACFd,MAAAA,YADE;AAEFC,MAAAA,SAFE;AAGFC,MAAAA,SAHE;AAIFC,MAAAA,SAJE;AAKFE,MAAAA;AALE,QAMF,KAAKb,KAAL,CAAWe,IANf;AAOA,UAAMiB,MAAM,GAAG;AACXC,MAAAA,UAAU,EAAEzB,YAAY,CAACU,KAAb,CAAmB,EAAnB,EAAuBC,IAAvB,CAA4B,EAA5B,CADD;AAEXW,MAAAA,KAAK,EAAEjB,eAAe,CAACqB,IAFZ;AAGXC,MAAAA,GAAG,EAAExB,SAHM;AAIXyB,MAAAA,eAAe,EAAE3B,SAJN;AAKX4B,MAAAA,cAAc,EAAE3B,SALL;AAMXkB,MAAAA,OAAO,EAAGC,CAAD,IAAO;AAC5B;AACgB,aAAK7B,KAAL,CAAWC,OAAX,CAAmB;AAACW,UAAAA,iBAAiB,EAAEiB,CAAC,CAACS,IAAF,CAAOC;AAA3B,SAAnB;AACH,OATU;AAUXR,MAAAA,KAAK,EAAGF,CAAD,IAAOb,OAAO,CAACC,GAAR,CAAYY,CAAZ;AAVH,KAAf;AAYAJ,IAAAA,sBAAsB,CAACe,eAAvB,CAAuCR,MAAvC;AACH;;AAEDR,EAAAA,WAAW,GAAG;AACV,UAAM;AAACD,MAAAA,gBAAD;AAAmBkB,MAAAA;AAAnB,QAA+B,KAAKzC,KAA1C;AACA,UAAM;AAACa,MAAAA;AAAD,QAAoB,KAAKb,KAAL,CAAWe,IAArC;AAEA,QAAI2B,UAAU,GAAGD,QAAQ,CAACE,MAAT,CACG,CAACC,GAAD,EAAMC,IAAN,KACAD,GAAG,GAAIE,MAAM,CAACD,IAAI,CAACE,aAAN,CAAN,GAA6BD,MAAM,CAACD,IAAI,CAACG,UAAN,CAF7C,EAEiE,CAFjE,CAAjB;AAIA,QAAIC,UAAU,GAAGH,MAAM,CAACvB,gBAAgB,CAAC2B,KAAjB,CAAuBC,OAAvB,CAA+B,GAA/B,EAAoC,GAApC,CAAD,CAAvB;AAEA1B,IAAAA,sBAAsB,CAAC2B,eAAvB,CAAuC;AACnCC,MAAAA,MAAM,EAAEX,UAAU,GAAGO,UADc;AAEnCK,MAAAA,wBAAwB,EAAE,CAFS;AAGnCC,MAAAA,cAAc,EAAE,CAHmB;AAInCzB,MAAAA,KAAK,EAAEjB,eAAe,CAACqB,IAJY;AAKnCN,MAAAA,OAAO,EAAG4B,IAAD,IAAU;AAC/B;AACgB,aAAKxD,KAAL,CAAWC,OAAX,CAAmB;AAACa,UAAAA,cAAc,EAAE0C,IAAI,CAACC;AAAtB,SAAnB;AACA,aAAKzD,KAAL,CAAWC,OAAX,CAAmB;AAACyD,UAAAA,yBAAyB,EAAEF,IAAI,CAACC,YAAL,CAAkB5C,eAAe,CAACqB,IAAlC,EAAwC,CAAxC;AAA5B,SAAnB;AACH,OATkC;AAUnCH,MAAAA,KAAK,EAAGF,CAAD,IAAOb,OAAO,CAACC,GAAR,CAAYY,CAAZ;AAVqB,KAAvC;AAYH;;AAED8B,EAAAA,qBAAqB,GAAG;AACpB,UAAM;AAACC,MAAAA;AAAD,QAA6B,KAAK5D,KAAxC;AACA,WACI;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAG,4BADX;AAEI,MAAA,OAAO,EAAI4D,wBAAwB,KAAK,QAF5C;AAGI,MAAA,QAAQ,EAAI,MAAM,KAAK5D,KAAL,CAAW6D,gBAAX,CAA4B,QAA5B,CAHtB;AAII,MAAA,KAAK,EAAG,oBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AACI,MAAA,IAAI,EAAG,4BADX;AAEI,MAAA,OAAO,EAAID,wBAAwB,KAAK,QAF5C;AAGI,MAAA,QAAQ,EAAI,MAAM,KAAK5D,KAAL,CAAW6D,gBAAX,CAA4B,QAA5B,CAHtB;AAII,MAAA,KAAK,EAAG,yBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ;AAkBH;;AAED1D,EAAAA,QAAQ,GAAG;AACP,UAAM;AAACyD,MAAAA;AAAD,QAA6B,KAAK5D,KAAxC;AACA,UAAM;AACF8D,MAAAA,GADE;AACGC,MAAAA,SADH;AAEFvD,MAAAA,YAFE;AAEYwD,MAAAA,UAFZ;AAEwBvD,MAAAA,SAFxB;AAEmCC,MAAAA,SAFnC;AAE8CgD,MAAAA,yBAF9C;AAEyE/C,MAAAA;AAFzE,QAGF,KAAKX,KAAL,CAAWe,IAHf;AAIA,UAAMlB,KAAK,GAAG,EAAd;;AAEA,QAAI+D,wBAAwB,KAAK,QAAjC,EAA2C;AACvC,UAAI,CAACG,SAAD,IAAc,CAACD,GAAnB,EAAwBjE,KAAK,CAACkE,SAAN,GAAkB,6BAAlB;AACxB,UAAIA,SAAS,IAAIA,SAAS,CAAC3C,MAAV,KAAqB,EAAlC,IAAwC,CAACzB,WAAW,CAACoE,SAAD,CAAxD,EACIlE,KAAK,CAACkE,SAAN,GAAkB,0CAAlB;AACP;;AAAA;;AACD,QAAIH,wBAAwB,KAAK,QAAjC,EAA2C;AACvC,UAAI,CAACpD,YAAD,IAAiBA,YAAY,CAACY,MAAb,KAAwB,EAA7C,EAAiDvB,KAAK,CAACW,YAAN,GAAqB,0CAArB;AACjD,UAAI,CAACwD,UAAL,EAAiBnE,KAAK,CAACmE,UAAN,GAAmB,6CAAnB;AACjB,UAAI,CAACvD,SAAD,IAAcA,SAAS,CAACW,MAAV,KAAqB,CAAvC,EAA0CvB,KAAK,CAACY,SAAN,GAAkB,iDAAlB;AAC1C,UAAI,CAACC,SAAD,IAAcA,SAAS,CAACU,MAAV,KAAqB,CAAvC,EAA0CvB,KAAK,CAACa,SAAN,GAAkB,iDAAlB;AAC1C,UAAI,CAACgD,yBAAL,EAAgC7D,KAAK,CAAC6D,yBAAN,GAAkC,kCAAlC;AAChC,UAAI,CAAC/C,SAAD,IAAcA,SAAS,CAACS,MAAV,KAAqB,CAAvC,EAA0CvB,KAAK,CAACc,SAAN,GAAkB,mDAAlB;AAC7C;;AAAA;AAED,SAAKsD,QAAL,CAAc;AAACpE,MAAAA;AAAD,KAAd;AACA,WAAO,EAAEqE,MAAM,CAACC,IAAP,CAAYtE,KAAZ,EAAmBuB,MAAnB,GAA4B,CAA9B,CAAP;AACH;;AAIDgD,EAAAA,wBAAwB,GAAG;AACvB,UAAM;AAACN,MAAAA,GAAD;AAAMC,MAAAA;AAAN,QAAmB,KAAK/D,KAAL,CAAWe,IAApC;AACA,UAAM;AAAClB,MAAAA;AAAD,QAAU,KAAKwE,KAArB;AACA,WACI;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AACI,MAAA,KAAK,EAAIN,SAAS,IAAID,GAD1B;AAEI,MAAA,IAAI,EAAG,KAFX;AAGI,MAAA,IAAI,EAAIjE,KAAK,CAACkE,SAHlB;AAII,MAAA,WAAW,EAAG,KAJlB;AAKI,MAAA,KAAK,EAAG,KALZ;AAMI,MAAA,QAAQ,EAAKO,CAAD,IAAO,KAAKC,QAAL,CAAc,WAAd,EAA2BhF,SAAS,CAAC+E,CAAC,CAACE,MAAF,CAASzE,KAAV,CAApC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAWH;;AAED0E,EAAAA,wBAAwB,GAAG;AACvB,UAAM;AACFT,MAAAA,UADE;AAEFxD,MAAAA,YAFE;AAGFG,MAAAA,SAHE;AAIFF,MAAAA,SAJE;AAKFC,MAAAA,SALE;AAMFI,MAAAA,cANE;AAOF4C,MAAAA,yBAPE;AAQF7C,MAAAA;AARE,QASF,KAAKb,KAAL,CAAWe,IATf;AAUA,UAAM;AAAClB,MAAAA;AAAD,QAAU,KAAKwE,KAArB;AACA,WACI;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AACI,MAAA,KAAK,EAAIL,UADb;AAEI,MAAA,IAAI,EAAInE,KAAK,CAACmE,UAFlB;AAGI,MAAA,IAAI,EAAG,YAHX;AAII,MAAA,WAAW,EAAG,gCAJlB;AAKI,MAAA,KAAK,EAAG,4BALZ;AAMI,MAAA,QAAQ,EAAKM,CAAD,IAAO,KAAKC,QAAL,CAAc,YAAd,EAA4BD,CAAC,CAACE,MAAF,CAASzE,KAArC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AACI,MAAA,KAAK,EAAIS,YADb;AAEI,MAAA,IAAI,EAAIX,KAAK,CAACW,YAFlB;AAGI,MAAA,IAAI,EAAG,cAHX;AAII,MAAA,WAAW,EAAG,qBAJlB;AAKI,MAAA,KAAK,EAAG,wBALZ;AAMI,MAAA,QAAQ,EAAK8D,CAAD,IAAO,KAAKC,QAAL,CAAc,cAAd,EAA8B/E,YAAY,CAAC8E,CAAC,CAACE,MAAF,CAASzE,KAAV,CAA1C,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AACI,MAAA,KAAK,EAAIY,SADb;AAEI,MAAA,IAAI,EAAId,KAAK,CAACc,SAFlB;AAGI,MAAA,IAAI,EAAG,WAHX;AAII,MAAA,WAAW,EAAG,KAJlB;AAKI,MAAA,KAAK,EAAG,wCALZ;AAMI,MAAA,QAAQ,EAAK2D,CAAD,IAAO,KAAKC,QAAL,CAAc,WAAd,EAA2B9E,YAAY,CAAC6E,CAAC,CAACE,MAAF,CAASzE,KAAV,EAAiB,CAAjB,CAAvC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,CARJ,EA4BI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CA5BJ,EA+BI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AACI,MAAA,KAAK,EAAIU,SADb;AAEI,MAAA,IAAI,EAAIZ,KAAK,CAACY,SAFlB;AAGI,MAAA,IAAI,EAAG,WAHX;AAII,MAAA,WAAW,EAAG,IAJlB;AAKI,MAAA,KAAK,EAAG,QALZ;AAMI,MAAA,QAAQ,EAAK6D,CAAD,IAAO,KAAKC,QAAL,CAAc,WAAd,EAA2B9E,YAAY,CAAC6E,CAAC,CAACE,MAAF,CAASzE,KAAV,EAAiB,CAAjB,CAAvC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAM,MAAA,SAAS,EAAG,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARJ,EASI,MAAC,WAAD;AACI,MAAA,KAAK,EAAIW,SADb;AAEI,MAAA,IAAI,EAAIb,KAAK,CAACa,SAFlB;AAGI,MAAA,IAAI,EAAG,WAHX;AAII,MAAA,WAAW,EAAG,MAJlB;AAKI,MAAA,KAAK,EAAG,KALZ;AAMI,MAAA,QAAQ,EAAK4D,CAAD,IAAO,KAAKC,QAAL,CAAc,WAAd,EAA2B9E,YAAY,CAAC6E,CAAC,CAACE,MAAF,CAASzE,KAAV,EAAiB,CAAjB,CAAvC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CA/BJ,EAgDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDJ,EAiDI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAjDJ,EAqDQe,cAAc,IAAI4C,yBAAlB,IACI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAG,SADX;AAEI,MAAA,KAAK,EAAIA,yBAAyB,CAACgB,QAFvC;AAGI,MAAA,QAAQ,EAAKJ,CAAD,IAAO,KAAKC,QAAL,CAAc,2BAAd,EAA2CzD,cAAc,CAACD,eAAe,CAACqB,IAAjB,CAAd,CAAqCoC,CAAC,CAACE,MAAF,CAASzE,KAAT,GAAiB,CAAtD,CAA3C,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKQ,CAAC2D,yBAAD,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DANR,EASQ5C,cAAc,CAACD,eAAe,CAACqB,IAAjB,CAAd,CACCP,KADD,CACO,CADP,EACS,CADT,EAECgD,GAFD,CAEK,CAAC9B,IAAD,EAAO+B,KAAP,KACD;AAAQ,MAAA,GAAG,EAAGA,KAAd;AAAqB,MAAA,KAAK,EAAE/B,IAAI,CAAC6B,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK7B,IAAI,CAAC6B,QADV,YAC0BhF,WAAW,CAACmD,IAAI,CAACgC,WAAL,GAAmBhC,IAAI,CAAC6B,QAAzB,CADrC,eAHJ,CATR,CADJ,EAmBK7E,KAAK,CAAC6D,yBAAN,IACG;AAAO,MAAA,SAAS,EAAG,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4B7D,KAAK,CAAC6D,yBAAlC,MApBR,CAtDZ,CADJ;AAkFH;;AAEDoB,EAAAA,MAAM,GAAI;AACN,UAAM;AAAClB,MAAAA;AAAD,QAA6B,KAAK5D,KAAxC;AACA,WACI;AAAK,MAAA,SAAS,EAAG,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGK,KAAK2D,qBAAL,EAHL,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMKC,wBAAwB,KAAK,QAA7B,IAAyC,KAAKQ,wBAAL,EAN9C,EAOKR,wBAAwB,KAAK,QAA7B,IAAyC,KAAKa,wBAAL,EAP9C,CADJ;AAWH;;AAtRkC;;AAyRvC,MAAMM,eAAe,GAAGV,KAAK,KAAK;AAC9BW,EAAAA,OAAO,EAAEX,KAAK,CAACY,IAAN,CAAWD,OADU;AAE9BvC,EAAAA,QAAQ,EAAE4B,KAAK,CAAC5B,QAAN,CAAeA,QAFK;AAG9ByC,EAAAA,OAAO,EAAEb,KAAK,CAACa,OAAN,CAAcA,OAHO;AAI9BnE,EAAAA,IAAI,EAAEsD,KAAK,CAACc,QAAN,CAAepE,IAJS;AAK9B6C,EAAAA,wBAAwB,EAAES,KAAK,CAACc,QAAN,CAAevB,wBALX;AAM9BwB,EAAAA,SAAS,EAAEf,KAAK,CAACc,QAAN,CAAeC,SANI;AAO9BC,EAAAA,UAAU,EAAEhB,KAAK,CAACc,QAAN,CAAeE,UAPG;AAQ9B9D,EAAAA,gBAAgB,EAAE8C,KAAK,CAAC5B,QAAN,CAAelB;AARH,CAAL,CAA7B;;AAWA,eAAelC,OAAO,CAAC0F,eAAD,EAAkBzF,OAAlB,CAAP,CAAmCM,cAAnC,CAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport FormRadio from '../../components/Inputs/FormRadio';\r\nimport FormSimples from '../../components/Inputs/FormSimples';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport {formatCPF, formatCartao, formatNumber} from '../../utils/format';\r\nimport {formatMoney} from '../../utils';\r\nimport {validateCPF} from '../../utils/validate';\r\n\r\nclass DadosPagamento extends Component {\r\n\r\n    state = {erros: {}}\r\n\r\n    componentDidMount() {\r\n        this.props.getSessionPagamento();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {\r\n            numeroCartao,\r\n            mesCartao,\r\n            anoCartao,\r\n            CVVCartao,\r\n            credit_card_token,\r\n            bandeira_cartao,\r\n            parcelasCartao\r\n        } = this.props.form;\r\n        console.log('dados pag-numcartao: ', numeroCartao);\r\n        console.log('dados pag-mescartao: ', mesCartao);\r\n        console.log('dados pag-anocartao: ', anoCartao);\r\n        console.log('dados pag-cvvcartao: ', CVVCartao);\r\n        console.log('dados pag-credit-card-token-cartao: ', credit_card_token);\r\n        console.log('dados pag-bandeiracartao: ', bandeira_cartao);\r\n        console.log('dados pag-parcelascartao: ', parcelasCartao);\r\n\r\n        if (!bandeira_cartao && numeroCartao && numeroCartao.split('').join('').length > 7) {\r\n            this.getBrand();\r\n        }\r\n\r\n        if(\r\n            !credit_card_token &&\r\n            numeroCartao && numeroCartao.split('').join('').length === 16 &&\r\n            mesCartao && mesCartao.length === 2 &&\r\n            anoCartao && anoCartao.length === 4 &&\r\n            CVVCartao && CVVCartao.length === 3 &&\r\n            bandeira_cartao \r\n        ) this.submitCartaoHash();\r\n\r\n        if ((!parcelasCartao && bandeira_cartao) ||\r\n            (parcelasCartao && bandeira_cartao && prevProps.freteSelecionado !== this.props.freteSelecionado)\r\n        ) this.getParcelas();\r\n    }\r\n\r\n    getBrand() {\r\n        const {numeroCartao} = this.props.form;\r\n        PagSeguroDirectPayment.getBrand({\r\n            cardBin: numeroCartao.split('').join('').slice(0,6),\r\n            success: (r) => {\r\n                console.log('bandeiras: ', r);\r\n                this.props.setForm({bandeira_cartao: r.brand})\r\n            },    \r\n            error: (r) => console.log(r)\r\n        });\r\n    }\r\n\r\n    submitCartaoHash() {\r\n        const {\r\n            numeroCartao,\r\n            mesCartao,\r\n            anoCartao,\r\n            CVVCartao,\r\n            bandeira_cartao\r\n        } = this.props.form;\r\n        const params = {\r\n            cardNumber: numeroCartao.split('').join(''),\r\n            brand: bandeira_cartao.name,\r\n            cvv: CVVCartao,\r\n            expirationMonth: mesCartao,\r\n            expirationYear: anoCartao,\r\n            success: (r) => {\r\n//                console.log('credit card token:', r);\r\n                this.props.setForm({credit_card_token: r.card.token})\r\n            },    \r\n            error: (r) => console.log(r)\r\n        };\r\n        PagSeguroDirectPayment.createCardToken(params);\r\n    }\r\n\r\n    getParcelas() {\r\n        const {freteSelecionado, carrinho} = this.props;\r\n        const {bandeira_cartao} = this.props.form;\r\n\r\n        let valorTotal = carrinho.reduce(\r\n                            (all, item) => \r\n                            all + (Number(item.precoUnitario) * Number(item.quantidade)), 0\r\n                        );\r\n        let freteValor = Number(freteSelecionado.Valor.replace(',', '.'));\r\n\r\n        PagSeguroDirectPayment.getInstallments({\r\n            amount: valorTotal + freteValor,\r\n            maxInstallmentNoInterest: 6,\r\n            maxInstallment: 6,\r\n            brand: bandeira_cartao.name,\r\n            success: (data) => {\r\n//                console.log(data);                \r\n                this.props.setForm({parcelasCartao: data.installments});\r\n                this.props.setForm({parcelasCartaoSelecionada: data.installments[bandeira_cartao.name][0]});\r\n            },\r\n            error: (r) => console.log(r)\r\n        });\r\n    }\r\n\r\n    renderOpcoesPagamento() {\r\n        const {tipoPagamentoSelecionado} = this.props;\r\n        return (\r\n            <div className = \"flex horizontal\">\r\n                <div className = \"flex-1\">\r\n                    <FormRadio \r\n                        name = \"tipo_pagamento_selecionado\" \r\n                        checked = {tipoPagamentoSelecionado === 'boleto'} \r\n                        onChange = {() => this.props.setTipoPagamento(\"boleto\")}\r\n                        label = \"Boleto Bancário\" />\r\n                </div>\r\n                <div className = \"flex-1\">\r\n                    <FormRadio \r\n                        name = \"tipo_pagamento_selecionado\" \r\n                        checked = {tipoPagamentoSelecionado === 'cartao'} \r\n                        onChange = {() => this.props.setTipoPagamento(\"cartao\")}\r\n                        label = \"Cartão de Crédito\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    validate() {\r\n        const {tipoPagamentoSelecionado} = this.props;\r\n        const { \r\n            CPF, CPFboleto,\r\n            numeroCartao, nomeCartao, mesCartao, anoCartao, parcelasCartaoSelecionada, CVVCartao\r\n        } = this.props.form;\r\n        const erros = {};\r\n\r\n        if (tipoPagamentoSelecionado === \"boleto\") {\r\n            if (!CPFboleto && !CPF) erros.CPFboleto = \"Preencha aqui com o seu CPF\";\r\n            if (CPFboleto && CPFboleto.length !== 14 && !validateCPF(CPFboleto))\r\n                erros.CPFboleto = \"Preencha aqui com o seu CPF corretamente\";\r\n        };\r\n        if (tipoPagamentoSelecionado === \"cartao\") {\r\n            if (!numeroCartao || numeroCartao.length !== 19) erros.numeroCartao = \"Preencha aqui com o número do seu cartão\";\r\n            if (!nomeCartao) erros.nomeCartao = \"Preencha aqui com o nome que está no cartão\";\r\n            if (!mesCartao || mesCartao.length !== 2) erros.mesCartao = \"Preencha aqui com o mês de vencimento do cartão\";\r\n            if (!anoCartao || anoCartao.length !== 4) erros.anoCartao = \"Preencha aqui com o ano de vencimento do cartão\";\r\n            if (!parcelasCartaoSelecionada) erros.parcelasCartaoSelecionada = \"Selecione uma forma de pagamento\";\r\n            if (!CVVCartao || CVVCartao.length !== 3) erros.CVVCartao = \"Preencha aqui com o código de segurança do cartão\";\r\n        };\r\n        \r\n        this.setState({erros});\r\n        return !(Object.keys(erros).length > 0);\r\n    }\r\n\r\n    onChange = (field, value) => this.props.setForm({[field]: value}).then(() => this.validate());\r\n\r\n    renderPagamentoComBoleto() {\r\n        const {CPF, CPFboleto} = this.props.form;\r\n        const {erros} = this.state;\r\n        return (\r\n            <div className = \"Dados-Pagamento\">\r\n                <FormSimples \r\n                    value = {CPFboleto || CPF}\r\n                    name = \"CPF\" \r\n                    erro = {erros.CPFboleto}\r\n                    placeholder = \"CPF\" \r\n                    label = \"CPF\" \r\n                    onChange = {(e) => this.onChange(\"CPFboleto\", formatCPF(e.target.value))} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPagamentoComCartao() {\r\n        const { \r\n            nomeCartao, \r\n            numeroCartao, \r\n            CVVCartao, \r\n            mesCartao, \r\n            anoCartao, \r\n            parcelasCartao, \r\n            parcelasCartaoSelecionada,\r\n            bandeira_cartao\r\n        } = this.props.form;\r\n        const {erros} = this.state;\r\n        return (\r\n            <div className = \"Dados-Pagamento\">\r\n                <FormSimples \r\n                    value = {nomeCartao} \r\n                    erro = {erros.nomeCartao}\r\n                    name = \"nomeCartao\" \r\n                    placeholder = \"Nome como escrito no cartão\" \r\n                    label = \"Nome Completo no Cartão\" \r\n                    onChange = {(e) => this.onChange(\"nomeCartao\", e.target.value)} />\r\n                <div className = \"flex horizontal\">\r\n                    <div className = \"flex-1\">\r\n                        <FormSimples \r\n                            value = {numeroCartao} \r\n                            erro = {erros.numeroCartao}\r\n                            name = \"numeroCartao\" \r\n                            placeholder = \"XXXX XXXX XXXX XXXX\" \r\n                            label = \"Número do Cartão\" \r\n                            onChange = {(e) => this.onChange(\"numeroCartao\", formatCartao(e.target.value))} />\r\n                    </div>\r\n                    <div className = \"flex-1\">\r\n                        <FormSimples \r\n                            value = {CVVCartao} \r\n                            erro = {erros.CVVCartao}\r\n                            name = \"CVVCartao\" \r\n                            placeholder = \"XXX\" \r\n                            label = \"Código de Segurança do Cartão\" \r\n                            onChange = {(e) => this.onChange(\"CVVCartao\", formatNumber(e.target.value, 3))} />\r\n                    </div>\r\n                </div>\r\n                <div className = \"form-input\">\r\n                    <label> Data de Validade </label>\r\n                </div>\r\n                <div className = \"flex\">\r\n                    <FormSimples \r\n                        value = {mesCartao} \r\n                        erro = {erros.mesCartao}\r\n                        name = \"mesCartao\" \r\n                        placeholder = \"MM\" \r\n                        label = \"Mês\" \r\n                        onChange = {(e) => this.onChange(\"mesCartao\", formatNumber(e.target.value, 2))} />\r\n                    <span className = \"slash-pagamento\"> &nbsp; / &nbsp; </span>\r\n                    <FormSimples \r\n                        value = {anoCartao} \r\n                        erro = {erros.anoCartao}\r\n                        name = \"anoCartao\" \r\n                        placeholder = \"AAAA\" \r\n                        label = \"Ano\" \r\n                        onChange = {(e) => this.onChange(\"anoCartao\", formatNumber(e.target.value, 4))} />\r\n                </div>\r\n                <br />\r\n                <div className = \"form-input\">\r\n                    <label> Parcelas </label>\r\n                </div>\r\n                {\r\n                    parcelasCartao && parcelasCartaoSelecionada && (\r\n                        <div className = \"flex\">\r\n                            <select \r\n                                name = \"parcela\" \r\n                                value = {parcelasCartaoSelecionada.quantity}\r\n                                onChange = {(e) => this.onChange(\"parcelasCartaoSelecionada\", parcelasCartao[bandeira_cartao.name][e.target.value - 1])}>\r\n                                { \r\n                                    !parcelasCartaoSelecionada &&\r\n                                    <option> Selecione a quantidade de parcelas para pagamento </option>\r\n                                }\r\n                                {\r\n                                    parcelasCartao[bandeira_cartao.name]\r\n                                    .slice(0,6)\r\n                                    .map((item, index) => (\r\n                                        <option key= {index} value={item.quantity}>\r\n                                            {item.quantity} x de {formatMoney(item.totalAmount / item.quantity)} sem juros\r\n                                        </option> \r\n                                    ))\r\n                                }                               \r\n                            </select>\r\n                            {erros.parcelasCartaoSelecionada && (\r\n                                <small className = \"erro\"> {erros.parcelasCartaoSelecionada} </small>\r\n                            )}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        const {tipoPagamentoSelecionado} = this.props;\r\n        return (\r\n            <div className = \"Dados-Pagamento-Container\">\r\n                <h2> DADOS DE PAGAMENTO </h2>\r\n                <br />\r\n                {this.renderOpcoesPagamento()}\r\n                <br />\r\n                <br />\r\n                {tipoPagamentoSelecionado === 'boleto' && this.renderPagamentoComBoleto()}\r\n                {tipoPagamentoSelecionado === 'cartao' && this.renderPagamentoComCartao()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    usuario: state.auth.usuario,\r\n    carrinho: state.carrinho.carrinho,\r\n    cliente: state.cliente.cliente,\r\n    form: state.checkout.form,\r\n    tipoPagamentoSelecionado: state.checkout.tipoPagamentoSelecionado,\r\n    sessionId: state.checkout.sessionId,\r\n    senderHash: state.checkout.senderHash,\r\n    freteSelecionado: state.carrinho.freteSelecionado\r\n});\r\n\r\nexport default connect(mapStateToProps, actions) (DadosPagamento);"]},"metadata":{},"sourceType":"module"}