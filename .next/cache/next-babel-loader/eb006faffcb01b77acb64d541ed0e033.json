{"ast":null,"code":"import { SET_FORM, CLEAN_FORM, SET_TIPO_PAGAMENTO, FETCH_SESSION_ID, FETCH_SENDER_HASH, NOVO_PEDIDO, PAGAR_PEDIDO } from '../types';\nimport axios from 'axios';\nimport { API, versao, loja } from '../../config';\nimport { getCart } from '../../utils/cart';\nimport { getHeaders } from './helpers';\nimport errorHandling from './errorHandling';\nimport Router from 'next/router';\nimport { cleanCarrinho } from './carrinhoActions';\nexport const setForm = (payload, prefix) => dispatch => {\n  dispatch({\n    type: SET_FORM,\n    payload,\n    prefix\n  });\n  return Promise.resolve();\n};\nexport const cleanForm = () => ({\n  type: CLEAN_FORM\n});\nexport const setTipoPagamento = tipoPagamentoSelecionado => ({\n  type: SET_TIPO_PAGAMENTO,\n  tipoPagamentoSelecionado\n});\nexport const getSessionPagamento = () => dispatch => {\n  console.log('pulei 1');\n  /*        \r\n      axios.get(`${API}/${versao}/api/pagamentos/session`).then ((response) => {\r\n          dispatch({type: FETCH_SESSION_ID, payload: resposta.data});\r\n  \r\n          PagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n          let senderHash = PagSeguroDirectPayment.getSenderHash();\r\n          dispatch({type: FETCH_SENDER_HASH, senderHash});\r\n      })\r\n      .catch((e) => console.log(e));\r\n  */\n};\nexport const novoPedido = (form, freteSelecionado, tipoPagamentoSelecionado, valorTotal, token, senderHash, carrinho = getCart(), cb = null) => dispatch => {\n  axios.post(`${API}/${versao}/api/pedidos?loja=${loja}`, {\n    carrinho,\n    entrega: {\n      custo: freteSelecionado.Valor.replace(',', '.'),\n      tipo: freteSelecionado.Codigo.toString(),\n      prazo: freteSelecionado.PrazoEntrega,\n      endereco: {\n        local: form.local,\n        numero: form.numero,\n        complemento: form.complemento,\n        bairro: form.bairro,\n        cidade: form.cidade,\n        estado: form.estado,\n        CEP: form.CEP\n      }\n    },\n    pagamento: {\n      valor: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.totalAmount : valorTotal,\n      forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\n      parcelas: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.quantity : 1,\n      enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\n      endereco: {\n        local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\n        numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\n        complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\n        bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\n        cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\n        estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\n        CEP: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\n      },\n      cartao: tipoPagamentoSelecionado === \"cartao\" ? {\n        nomeCompleto: form.nomeCartao.trim(),\n        codigoArea: form.telefone.slice(0, 2),\n        telefone: form.telefone.slice(2).trim(),\n        dataDeNascimento: form.dataDeNascimento,\n        credit_card_token: form.credit_card_token,\n        cpf: form.CPF\n      } : undefined\n    }\n  }, getHeaders(token)).then(response => {\n    dispatch({\n      type: NOVO_PEDIDO,\n      payload: response.data\n    });\n    dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb));\n  }).catch(e => cb(errorHandling(e)));\n};\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\n  axios.post(`${API}/${versao}/api/pagamentos/pagar/${id}?Loja=${loja}`, {\n    senderHash\n  }, getHeaders(token)).then(response => {\n    dispatch({\n      type: PAGAR_PEDIDO,\n      payload: response.data\n    });\n    cb(null);\n    Router.push('/sucesso');\n    dispatch(cleanCarrinho());\n  }).catch(e => cb(errorHandling(e)));\n};\n/*\r\nexport const pagarPedido= (id, token, senderHash, cb = null) => dispatch => {\r\n    cb(null);\r\n    Router.push('/sucesso');\r\n    dispatch(cleanCarrinho());        \r\n};\r\n*/\n\nexport default {\n  setForm,\n  cleanForm,\n  setTipoPagamento,\n  getSessionPagamento,\n  novoPedido,\n  pagarPedido\n};","map":{"version":3,"sources":["F:/APLICACAO/lojavirtual/redux/actions/checkoutActions.js"],"names":["SET_FORM","CLEAN_FORM","SET_TIPO_PAGAMENTO","FETCH_SESSION_ID","FETCH_SENDER_HASH","NOVO_PEDIDO","PAGAR_PEDIDO","axios","API","versao","loja","getCart","getHeaders","errorHandling","Router","cleanCarrinho","setForm","payload","prefix","dispatch","type","Promise","resolve","cleanForm","setTipoPagamento","tipoPagamentoSelecionado","getSessionPagamento","console","log","novoPedido","form","freteSelecionado","valorTotal","token","senderHash","carrinho","cb","post","entrega","custo","Valor","replace","tipo","Codigo","toString","prazo","PrazoEntrega","endereco","local","numero","complemento","bairro","cidade","estado","CEP","pagamento","valor","parcelasCartaoSelecionada","totalAmount","forma","parcelas","quantity","enderecoEntregaIgualCobranca","dadosEntregaIgualDadosCobranca","dadosCobranca","cartao","nomeCompleto","nomeCartao","trim","codigoArea","telefone","slice","dataDeNascimento","credit_card_token","cpf","CPF","undefined","then","response","data","pagarPedido","pedido","_id","catch","e","id","push"],"mappings":"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","sourcesContent":["import {\r\n    SET_FORM,\r\n    CLEAN_FORM,\r\n    SET_TIPO_PAGAMENTO,\r\n    FETCH_SESSION_ID,\r\n    FETCH_SENDER_HASH,\r\n    NOVO_PEDIDO,\r\n    PAGAR_PEDIDO\r\n} from '../types';\r\nimport axios from 'axios';\r\nimport {API, versao, loja} from '../../config';\r\nimport {getCart} from '../../utils/cart';\r\nimport {getHeaders} from './helpers';\r\nimport errorHandling from './errorHandling';\r\nimport Router from 'next/router';\r\nimport {cleanCarrinho} from './carrinhoActions';\r\n\r\nexport const setForm = (payload, prefix) => dispatch => {\r\n    dispatch({type: SET_FORM, payload, prefix});\r\n    return Promise.resolve();\r\n}\r\n\r\nexport const cleanForm = () => ({type: CLEAN_FORM});\r\n\r\nexport const setTipoPagamento = (tipoPagamentoSelecionado) => \r\n                        ({type: SET_TIPO_PAGAMENTO, tipoPagamentoSelecionado});\r\n\r\nexport const getSessionPagamento = () => (dispatch) => {\r\n    console.log('pulei 1');\r\n/*        \r\n    axios.get(`${API}/${versao}/api/pagamentos/session`).then ((response) => {\r\n        dispatch({type: FETCH_SESSION_ID, payload: resposta.data});\r\n\r\n        PagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n        let senderHash = PagSeguroDirectPayment.getSenderHash();\r\n        dispatch({type: FETCH_SENDER_HASH, senderHash});\r\n    })\r\n    .catch((e) => console.log(e));\r\n*/   \r\n};\r\n\r\nexport const novoPedido = (\r\n    form, freteSelecionado, tipoPagamentoSelecionado, \r\n    valorTotal, token, senderHash, carrinho = getCart(), cb = null\r\n) => dispatch => {\r\n    axios.post(`${API}/${versao}/api/pedidos?loja=${loja}`, {\r\n        carrinho,\r\n        entrega: {\r\n            custo: freteSelecionado.Valor.replace(',', '.'),\r\n            tipo: (freteSelecionado.Codigo).toString(),\r\n            prazo: freteSelecionado.PrazoEntrega,\r\n            endereco: {\r\n                local: form.local,\r\n                numero: form.numero,\r\n                complemento: form.complemento,\r\n                bairro: form.bairro,\r\n                cidade: form.cidade,\r\n                estado: form.estado,\r\n                CEP: form.CEP\r\n            }\r\n        },\r\n        pagamento: {\r\n            valor: tipoPagamentoSelecionado === \"cartao\" ? \r\n                        form.parcelasCartaoSelecionada.totalAmount :\r\n                        valorTotal,\r\n            forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\r\n            parcelas: tipoPagamentoSelecionado === \"cartao\" ? \r\n                        form.parcelasCartaoSelecionada.quantity : 1,\r\n            enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\r\n            endereco: {\r\n                local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\r\n                numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\r\n                complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\r\n                bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\r\n                cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\r\n                estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\r\n                CEP: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\r\n            },\r\n            cartao: tipoPagamentoSelecionado === \"cartao\" ? {\r\n                nomeCompleto: form.nomeCartao.trim(),\r\n                codigoArea: form.telefone.slice(0,2),\r\n                telefone: form.telefone.slice(2).trim(),\r\n                dataDeNascimento: form.dataDeNascimento,\r\n                credit_card_token: form.credit_card_token,\r\n                cpf: form.CPF                \r\n            } : undefined \r\n        }\r\n    }, getHeaders(token))\r\n    .then (response => {\r\n        dispatch({type: NOVO_PEDIDO, payload: response.data});\r\n        dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb)); \r\n})\r\n    .catch(e => cb (errorHandling(e)));\r\n};\r\n\r\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\r\n        axios.post(\r\n            `${API}/${versao}/api/pagamentos/pagar/${id}?Loja=${loja}`, \r\n            {senderHash}, \r\n            getHeaders(token)\r\n)\r\n.then (response => {\r\n    dispatch({type: PAGAR_PEDIDO, payload: response.data});\r\n    cb(null);\r\n    Router.push('/sucesso');\r\n    dispatch(cleanCarrinho());        \r\n})\r\n.catch(e => cb (errorHandling(e)));\r\n}\r\n/*\r\nexport const pagarPedido= (id, token, senderHash, cb = null) => dispatch => {\r\n    cb(null);\r\n    Router.push('/sucesso');\r\n    dispatch(cleanCarrinho());        \r\n};\r\n*/\r\nexport default {\r\n    setForm,\r\n    cleanForm,\r\n    setTipoPagamento,\r\n    getSessionPagamento,\r\n    novoPedido,\r\n    pagarPedido\r\n};"]},"metadata":{},"sourceType":"module"}