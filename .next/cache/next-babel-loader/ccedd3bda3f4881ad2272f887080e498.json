{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_FORM, CLEAN_FORM, SET_TIPO_PAGAMENTO, FETCH_SESSION_ID, FETCH_SENDER_HASH, NOVO_PEDIDO, PAGAR_PEDIDO } from '../types';\nconst initialState = {\n  form: {\n    dadosCobranca: {}\n  },\n  tipoPagamentoSelecionado: \"cartao\"\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_FORM:\n      let form = _objectSpread({}, state.form);\n\n      Object.keys(action.payload).forEach(item => {\n        if (action.prefix) form[action.prefix][item] = action.payload[item];else form[item] = action.payload[item];\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        form\n      });\n\n    case CLEAN_FORM:\n      return _objectSpread(_objectSpread({}, state), initialState);\n\n    case SET_TIPO_PAGAMENTO:\n      //            console.log('tp pagto: ', action.tipoPagamentoSelecionado);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tipoPagamentoSelecionado: action.tipoPagamentoSelecionado\n      });\n\n    case FETCH_SESSION_ID:\n      //            console.log('session: ', action.payload.sessionId);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sessionId: action.payload.sessionId\n      });\n\n    case FETCH_SENDER_HASH:\n      //            console.log('sendhash: ', action.senderHash);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        senderHash: action.senderHash\n      });\n\n    case NOVO_PEDIDO:\n      //            console.log('novo pedido: ', action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        novoPedido: action.payload.pedido\n      });\n\n    case PAGAR_PEDIDO:\n      //            console.log('pagamento: ', action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        novoPagamento: action.payload.pagamento\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["F:/APLICACAO/lojavirtual/redux/reducers/checkoutReducers.js"],"names":["SET_FORM","CLEAN_FORM","SET_TIPO_PAGAMENTO","FETCH_SESSION_ID","FETCH_SENDER_HASH","NOVO_PEDIDO","PAGAR_PEDIDO","initialState","form","dadosCobranca","tipoPagamentoSelecionado","state","action","type","Object","keys","payload","forEach","item","prefix","sessionId","senderHash","novoPedido","pedido","novoPagamento","pagamento"],"mappings":";;;;;;AAAA,SACIA,QADJ,EAEIC,UAFJ,EAGIC,kBAHJ,EAIIC,gBAJJ,EAKIC,iBALJ,EAMIC,WANJ,EAOIC,YAPJ,QAQO,UARP;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GADW;AAEjBC,EAAAA,wBAAwB,EAAE;AAFT,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,QAAL;AACI,UAAIQ,IAAI,qBAAQG,KAAK,CAACH,IAAd,CAAR;;AACAM,MAAAA,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,OAAnB,EAA4BC,OAA5B,CAAoCC,IAAI,IAAI;AACxC,YAAGN,MAAM,CAACO,MAAV,EAAkBX,IAAI,CAACI,MAAM,CAACO,MAAR,CAAJ,CAAoBD,IAApB,IAA4BN,MAAM,CAACI,OAAP,CAAeE,IAAf,CAA5B,CAAlB,KACKV,IAAI,CAACU,IAAD,CAAJ,GAAaN,MAAM,CAACI,OAAP,CAAeE,IAAf,CAAb;AACR,OAHD;AAIA,6CAAYP,KAAZ;AAAmBH,QAAAA;AAAnB;;AACJ,SAAKP,UAAL;AACI,6CACOU,KADP,GAEOJ,YAFP;;AAIJ,SAAKL,kBAAL;AACR;AACY,6CACOS,KADP;AAEID,QAAAA,wBAAwB,EAAEE,MAAM,CAACF;AAFrC;;AAIJ,SAAKP,gBAAL;AACR;AACY,6CACOQ,KADP;AAEIS,QAAAA,SAAS,EAAER,MAAM,CAACI,OAAP,CAAeI;AAF9B;;AAIJ,SAAKhB,iBAAL;AACR;AACY,6CACOO,KADP;AAEIU,QAAAA,UAAU,EAAET,MAAM,CAACS;AAFvB;;AAIJ,SAAKhB,WAAL;AACR;AACY,6CACOM,KADP;AAEIW,QAAAA,UAAU,EAAEV,MAAM,CAACI,OAAP,CAAeO;AAF/B;;AAIJ,SAAKjB,YAAL;AACR;AACY,6CACOK,KADP;AAEIa,QAAAA,aAAa,EAAEZ,MAAM,CAACI,OAAP,CAAeS;AAFlC;;AAIJ;AACI,aAAOd,KAAP;AA5CR;AA8CH,CA/CD","sourcesContent":["import {\r\n    SET_FORM,\r\n    CLEAN_FORM,\r\n    SET_TIPO_PAGAMENTO,\r\n    FETCH_SESSION_ID,\r\n    FETCH_SENDER_HASH,\r\n    NOVO_PEDIDO,\r\n    PAGAR_PEDIDO\r\n} from '../types';\r\n\r\nconst initialState = {\r\n    form: { dadosCobranca: {} },\r\n    tipoPagamentoSelecionado: \"cartao\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_FORM:\r\n            let form = { ...state.form };\r\n            Object.keys(action.payload).forEach(item => {\r\n                if(action.prefix) form[action.prefix][item] = action.payload[item];\r\n                else form[item] = action.payload[item];\r\n            });\r\n            return { ...state, form };\r\n        case CLEAN_FORM:\r\n            return {\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        case SET_TIPO_PAGAMENTO:\r\n//            console.log('tp pagto: ', action.tipoPagamentoSelecionado);\r\n            return {\r\n                ...state,\r\n                tipoPagamentoSelecionado: action.tipoPagamentoSelecionado\r\n            }\r\n        case FETCH_SESSION_ID:\r\n//            console.log('session: ', action.payload.sessionId);\r\n            return {\r\n                ...state,\r\n                sessionId: action.payload.sessionId\r\n            }\r\n        case FETCH_SENDER_HASH:\r\n//            console.log('sendhash: ', action.senderHash);\r\n            return {\r\n                ...state,\r\n                senderHash: action.senderHash\r\n            }\r\n        case NOVO_PEDIDO:\r\n//            console.log('novo pedido: ', action.payload);\r\n            return {\r\n                ...state,\r\n                novoPedido: action.payload.pedido\r\n            }\r\n        case PAGAR_PEDIDO:\r\n//            console.log('pagamento: ', action.payload);\r\n            return {\r\n                ...state,\r\n                novoPagamento: action.payload.pagamento\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}