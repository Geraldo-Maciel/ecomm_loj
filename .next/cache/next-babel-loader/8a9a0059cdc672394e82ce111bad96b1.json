{"ast":null,"code":"import { SET_FORM, CLEAN_FORM, SET_TIPO_PAGAMENTO, FETCH_SESSION_ID, FETCH_SENDER_HASH, NOVO_PEDIDO, PAGAR_PEDIDO } from '../types';\nimport axios from 'axios';\nimport { API, versao, loja } from '../../config';\nimport { getCart } from '../../utils/cart';\nimport { getHeaders } from './helpers';\nimport errorHandling from './errorHandling';\nimport Router from 'next/router';\nimport { cleanCarrinho } from './carrinhoActions';\nexport var setForm = function setForm(payload, prefix) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_FORM,\n      payload: payload,\n      prefix: prefix\n    });\n    return Promise.resolve();\n  };\n};\nexport var cleanForm = function cleanForm() {\n  return {\n    type: CLEAN_FORM\n  };\n};\nexport var setTipoPagamento = function setTipoPagamento(tipoPagamentoSelecionado) {\n  return {\n    type: SET_TIPO_PAGAMENTO,\n    tipoPagamentoSelecionado: tipoPagamentoSelecionado\n  };\n};\nexport var getSessionPagamento = function getSessionPagamento() {\n  return function (dispatch) {\n    axios.get(\"\".concat(API, \"/\").concat(versao, \"/api/pagamentos/session\")).then(function (response) {\n      dispatch({\n        type: FETCH_SESSION_ID,\n        payload: resposta.data\n      });\n      PagSeguroDirectPayment.setSessionId(response.data.sessionId);\n      var senderHash = PagSeguroDirectPayment.getSenderHash();\n      dispatch({\n        type: FETCH_SENDER_HASH,\n        senderHash: senderHash\n      });\n    })[\"catch\"](function (e) {\n      return console.log(e);\n    });\n  };\n};\nexport var novoPedido = function novoPedido(form, freteSelecionado, tipoPagamentoSelecionado, valorTotal, token, senderHash) {\n  var carrinho = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : getCart();\n  var cb = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n  return function (dispatch) {\n    axios.post(\"\".concat(API, \"/\").concat(versao, \"/api/pedidos?loja=\").concat(loja), {\n      carrinho: carrinho,\n      entrega: {\n        custo: 0,\n        tipo: 1111 .toString(),\n        prazo: 1,\n        //            custo: freteSelecionado.Valor.replace(',', '.'),\n        //            tipo: (freteSelecionado.Codigo).toString(),\n        //            prazo: freteSelecionado.PrazoEntrega,\n        endereco: {\n          local: form.local,\n          numero: form.numero,\n          complemento: form.complemento,\n          bairro: form.bairro,\n          cidade: form.cidade,\n          estado: form.estado,\n          CEP: form.CEP\n        }\n      },\n      pagamento: {\n        valor: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.totalAmount : valorTotal,\n        forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\n        parcelas: tipoPagamentoSelecionado === \"cartao\" ? form.parcelasCartaoSelecionada.quantity : 1,\n        enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\n        endereco: {\n          local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\n          numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\n          complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\n          bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\n          cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\n          estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\n          CEP: !Form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\n        },\n        cartao: tipoPagamentoSelecionado === \"cartao\" ? {\n          nomeCompleto: form.nomeCartao.trim(),\n          codigoArea: form.telefone.slice(0, 2),\n          telefone: form.telefone.slice(2).trim(),\n          dataDeNascimento: form.dataDeNascimento,\n          credit_card_token: form.credit_card_token,\n          cpf: form.CPF\n        } : undefined\n      }\n    }, getHeaders(token)).then(function (response) {\n      dispatch({\n        type: NOVO_PEDIDO,\n        payload: resposta.data\n      }); //        dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb));\n    })[\"catch\"](function (e) {\n      return cb(errorHandling(e));\n    });\n  };\n};\nexport var pagarPedido = function pagarPedido(id, token, senderHash) {\n  var cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  return function (dispatch) {\n    axios.post(\"\".concat(API, \"/\").concat(versao, \"/api/pagamentos/pagar/\").concat(id, \"?Loja=\").concat(loja), {\n      senderHash: senderHash\n    }, getHeaders(token)).then(function (response) {\n      dispatch({\n        type: PAGAR_PEDIDO,\n        payload: response.data\n      });\n      cb(nulo);\n      Router.push('/sucesso');\n      dispatch(cleanCarrinho());\n    })[\"catch\"](function (e) {\n      return cb(errorHandling(e));\n    });\n  };\n};\nexport default {\n  setForm: setForm,\n  cleanForm: cleanForm,\n  setTipoPagamento: setTipoPagamento,\n  getSessionPagamento: getSessionPagamento,\n  novoPedido: novoPedido,\n  pagarPedido: pagarPedido\n};","map":{"version":3,"sources":["F:/APLICACAO/lojavirtual/redux/actions/checkoutActions.js"],"names":["SET_FORM","CLEAN_FORM","SET_TIPO_PAGAMENTO","FETCH_SESSION_ID","FETCH_SENDER_HASH","NOVO_PEDIDO","PAGAR_PEDIDO","axios","API","versao","loja","getCart","getHeaders","errorHandling","Router","cleanCarrinho","setForm","payload","prefix","dispatch","type","Promise","resolve","cleanForm","setTipoPagamento","tipoPagamentoSelecionado","getSessionPagamento","get","then","response","resposta","data","PagSeguroDirectPayment","setSessionId","sessionId","senderHash","getSenderHash","e","console","log","novoPedido","form","freteSelecionado","valorTotal","token","carrinho","cb","post","entrega","custo","tipo","toString","prazo","endereco","local","numero","complemento","bairro","cidade","estado","CEP","pagamento","valor","parcelasCartaoSelecionada","totalAmount","forma","parcelas","quantity","enderecoEntregaIgualCobranca","dadosEntregaIgualDadosCobranca","dadosCobranca","Form","cartao","nomeCompleto","nomeCartao","trim","codigoArea","telefone","slice","dataDeNascimento","credit_card_token","cpf","CPF","undefined","pagarPedido","id","nulo","push"],"mappings":"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","sourcesContent":["import {\r\n    SET_FORM,\r\n    CLEAN_FORM,\r\n    SET_TIPO_PAGAMENTO,\r\n    FETCH_SESSION_ID,\r\n    FETCH_SENDER_HASH,\r\n    NOVO_PEDIDO,\r\n    PAGAR_PEDIDO\r\n} from '../types';\r\nimport axios from 'axios';\r\nimport {API, versao, loja} from '../../config';\r\nimport {getCart} from '../../utils/cart';\r\nimport {getHeaders} from './helpers';\r\nimport errorHandling from './errorHandling';\r\nimport Router from 'next/router';\r\nimport {cleanCarrinho} from './carrinhoActions';\r\n\r\nexport const setForm = (payload, prefix) => dispatch => {\r\n    dispatch({type: SET_FORM, payload, prefix});\r\n    return Promise.resolve();\r\n}\r\n\r\nexport const cleanForm = () => ({type: CLEAN_FORM});\r\n\r\nexport const setTipoPagamento = (tipoPagamentoSelecionado) => \r\n                        ({type: SET_TIPO_PAGAMENTO, tipoPagamentoSelecionado});\r\n\r\nexport const getSessionPagamento = () => (dispatch) => {\r\n    axios.get(`${API}/${versao}/api/pagamentos/session`).then ((response) => {\r\n        dispatch({type: FETCH_SESSION_ID, payload: resposta.data});\r\n\r\n        PagSeguroDirectPayment.setSessionId(response.data.sessionId);\r\n        let senderHash = PagSeguroDirectPayment.getSenderHash();\r\n        dispatch({type: FETCH_SENDER_HASH, senderHash});\r\n    })\r\n    .catch((e) => console.log(e));\r\n};\r\n\r\nexport const novoPedido = (\r\n    form, freteSelecionado, tipoPagamentoSelecionado, \r\n    valorTotal, token, senderHash, carrinho = getCart(), cb = null\r\n) => dispatch => {\r\n    axios.post(`${API}/${versao}/api/pedidos?loja=${loja}`, {\r\n        carrinho,\r\n        entrega: {\r\n            custo: 0,\r\n            tipo: (1111).toString(),\r\n            prazo: 1,\r\n//            custo: freteSelecionado.Valor.replace(',', '.'),\r\n//            tipo: (freteSelecionado.Codigo).toString(),\r\n//            prazo: freteSelecionado.PrazoEntrega,\r\n            endereco: {\r\n                local: form.local,\r\n                numero: form.numero,\r\n                complemento: form.complemento,\r\n                bairro: form.bairro,\r\n                cidade: form.cidade,\r\n                estado: form.estado,\r\n                CEP: form.CEP\r\n            }\r\n        },\r\n        pagamento: {\r\n            valor: tipoPagamentoSelecionado === \"cartao\"? \r\n                        form.parcelasCartaoSelecionada.totalAmount:\r\n                        valorTotal,\r\n            forma: tipoPagamentoSelecionado === \"cartao\" ? \"creditCard\" : \"boleto\",\r\n            parcelas: tipoPagamentoSelecionado === \"cartao\" ? \r\n                        form.parcelasCartaoSelecionada.quantity : 1,\r\n            enderecoEntregaIgualCobranca: form.dadosEntregaIgualDadosCobranca,\r\n            endereco: {\r\n                local: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.local : form.local,\r\n                numero: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.numero : form.numero,\r\n                complemento: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.complemento : form.complemento,\r\n                bairro: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.bairro : form.bairro,\r\n                cidade: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.cidade : form.cidade,\r\n                estado: !form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.estado : form.estado,\r\n                CEP: !Form.dadosEntregaIgualDadosCobranca ? form.dadosCobranca.CEP : form.CEP\r\n            },\r\n            cartao: tipoPagamentoSelecionado === \"cartao\"? {\r\n                nomeCompleto: form.nomeCartao.trim(),\r\n                codigoArea: form.telefone.slice(0,2),\r\n                telefone: form.telefone.slice(2).trim(),\r\n                dataDeNascimento: form.dataDeNascimento,\r\n                credit_card_token: form.credit_card_token,\r\n                cpf: form.CPF                \r\n            } : undefined \r\n        }\r\n    }, getHeaders(token))\r\n    .then (response => {\r\n        dispatch({type: NOVO_PEDIDO, payload: resposta.data});\r\n//        dispatch(pagarPedido(response.data.pedido.pagamento._id, token, senderHash, cb));\r\n    })\r\n    .catch(e => cb (errorHandling(e)));\r\n};\r\n\r\nexport const pagarPedido = (id, token, senderHash, cb = null) => dispatch => {\r\n    axios.post(\r\n        `${API}/${versao}/api/pagamentos/pagar/${id}?Loja=${loja}`, \r\n        {senderHash}, \r\n        getHeaders(token)\r\n    )\r\n    .then (response => {\r\n        dispatch({type: PAGAR_PEDIDO, payload: response.data});\r\n        cb(nulo);\r\n        Router.push('/sucesso');\r\n        dispatch(cleanCarrinho());        \r\n    })\r\n    .catch(e => cb (errorHandling(e)));\r\n}\r\n\r\nexport default {\r\n    setForm,\r\n    cleanForm,\r\n    setTipoPagamento,\r\n    getSessionPagamento,\r\n    novoPedido,\r\n    pagarPedido\r\n};"]},"metadata":{},"sourceType":"module"}