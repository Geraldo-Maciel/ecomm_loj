{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\ASSESSOR_ECO\\\\ECO_LOJ\\\\containers\\\\Checkout\\\\DadosFrete.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FormRadio from '../../components/Inputs/FormRadio';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport { getCart } from '../../utils/cart';\nimport { formatMoney, codigosCorreios } from '../../utils';\n\nvar DadosFrete = /*#__PURE__*/function (_Component) {\n  _inherits(DadosFrete, _Component);\n\n  var _super = _createSuper(DadosFrete);\n\n  function DadosFrete() {\n    _classCallCheck(this, DadosFrete);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DadosFrete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var form = this.props.form;\n\n      if (form) {\n        this.props.calcularFrete(form.CEP, getCart());\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.form.CEP !== this.props.form.CEP && this.props.form.CEP.length === 9) {\n        this.props.calcularFrete(this.props.form.CEP, getCart());\n      }\n    }\n  }, {\n    key: \"selecionarFrete\",\n    value: function selecionarFrete(frete) {\n      this.props.selecionarFrete(frete);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          fretes = _this$props.fretes,\n          freteSelecionado = _this$props.freteSelecionado; //        console.log('fretes: ', fretes);\n      //        console.log('dados frete-frete selecionado: ', freteSelecionado);\n\n      return __jsx(\"div\", {\n        className: \"Dados-Frete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, \"M\\xC9TODOS DE ENTREGA\"), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"flex horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, (fretes || []).map(function (frete, index) {\n        return __jsx(\"div\", {\n          className: \"flex-1\",\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }\n        }, __jsx(FormRadio, {\n          name: \"frete_selecionado\",\n          checked: freteSelecionado ? freteSelecionado.Codigo === frete.Codigo : false,\n          onChange: function onChange() {\n            return _this.selecionarFrete(frete);\n          },\n          label: \"\\n                                        \".concat(codigosCorreios[frete.Codigo], \" \\n                                        (\").concat(frete.PrazoEntrega, \" dias \\xFAteis) - \\n                                        \").concat(formatMoney(frete.Valor.replace(',', '.')), \"\\n                                    \"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return DadosFrete;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    usuario: state.auth.usuario,\n    carrinho: state.carrinho.carrinho,\n    cliente: state.cliente.cliente,\n    form: state.checkout.form,\n    fretes: state.carrinho.fretes,\n    freteSelecionado: state.carrinho.freteSelecionado\n  };\n};\n\nexport default connect(mapStateToProps, actions)(DadosFrete);","map":{"version":3,"sources":["F:/ASSESSOR_ECO/ECO_LOJ/containers/Checkout/DadosFrete.js"],"names":["React","Component","FormRadio","connect","actions","getCart","formatMoney","codigosCorreios","DadosFrete","form","props","calcularFrete","CEP","prevProps","length","frete","selecionarFrete","fretes","freteSelecionado","map","index","Codigo","PrazoEntrega","Valor","replace","mapStateToProps","state","usuario","auth","carrinho","cliente","checkout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport FormRadio from '../../components/Inputs/FormRadio';\r\n\r\nimport { connect } from 'react-redux';\r\nimport actions from '../../redux/actions';\r\nimport { getCart } from '../../utils/cart';\r\nimport { formatMoney, codigosCorreios } from '../../utils';\r\n\r\nclass DadosFrete extends Component{\r\n    \r\n    componentDidMount(){\r\n        const { form } = this.props;\r\n        if(form){\r\n            this.props.calcularFrete(form.CEP, getCart());\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.form.CEP !== this.props.form.CEP && this.props.form.CEP.length === 9){\r\n            this.props.calcularFrete(this.props.form.CEP, getCart());\r\n        }\r\n    }\r\n\r\n    selecionarFrete(frete){\r\n        this.props.selecionarFrete(frete);\r\n    }\r\n\r\n    render(){\r\n        const { fretes, freteSelecionado } = this.props;\r\n//        console.log('fretes: ', fretes);\r\n//        console.log('dados frete-frete selecionado: ', freteSelecionado);\r\n        return (\r\n            <div className=\"Dados-Frete\">\r\n                <h2>MÉTODOS DE ENTREGA</h2>\r\n                <br />\r\n                <div className=\"flex horizontal\">\r\n                    {\r\n                        (fretes || []).map((frete, index) => (\r\n                            <div className=\"flex-1\" key={index}>\r\n                                <FormRadio \r\n                                    name=\"frete_selecionado\" \r\n                                    checked={freteSelecionado ? freteSelecionado.Codigo === frete.Codigo : false} \r\n                                    onChange={()=> this.selecionarFrete(frete)}\r\n                                    label={`\r\n                                        ${codigosCorreios[frete.Codigo]} \r\n                                        (${frete.PrazoEntrega} dias úteis) - \r\n                                        ${formatMoney(frete.Valor.replace(',','.'))}\r\n                                    `} />\r\n                            </div>\r\n                        ))\r\n                    }                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    usuario: state.auth.usuario,\r\n    carrinho: state.carrinho.carrinho,\r\n    cliente: state.cliente.cliente,\r\n    form: state.checkout.form,\r\n    fretes: state.carrinho.fretes,\r\n    freteSelecionado: state.carrinho.freteSelecionado\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(DadosFrete);"]},"metadata":{},"sourceType":"module"}